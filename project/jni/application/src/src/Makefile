# Makefile.in generated by automake 1.15 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/enigma
pkgincludedir = $(includedir)/enigma
pkglibdir = $(libdir)/enigma
pkglibexecdir = $(libexecdir)/enigma
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
bin_PROGRAMS = enigma$(EXEEXT)
#am__append_1 = $(LIBENET_CFLAGS)
am__append_2 = -I$(top_srcdir)/lib-src/enet/include
#am__append_3 = $(LIBENET_LIBS)
am__append_4 = $(top_builddir)/lib-src/enet/libenet.a
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/codeset.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/glibc21.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intdiv0.m4 $(top_srcdir)/m4/intmax.m4 \
	$(top_srcdir)/m4/inttypes-pri.m4 $(top_srcdir)/m4/inttypes.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/isc-posix.m4 \
	$(top_srcdir)/m4/lcmessage.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/longdouble.m4 $(top_srcdir)/m4/longlong.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/printf-posix.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/signed.m4 $(top_srcdir)/m4/size_max.m4 \
	$(top_srcdir)/m4/stdint_h.m4 $(top_srcdir)/m4/uintmax_t.m4 \
	$(top_srcdir)/m4/ulonglong.m4 $(top_srcdir)/m4/wchar_t.m4 \
	$(top_srcdir)/m4/wint_t.m4 $(top_srcdir)/m4/xsize.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_enigma_OBJECTS = actors.$(OBJEXT) AttributeDescriptor.$(OBJEXT) \
	client.$(OBJEXT) DOMErrorReporter.$(OBJEXT) \
	DOMSchemaResolver.$(OBJEXT) d_follower.$(OBJEXT) \
	d_models.$(OBJEXT) display.$(OBJEXT) enigma.$(OBJEXT) \
	file.$(OBJEXT) file_zip.$(OBJEXT) floors.$(OBJEXT) \
	game.$(OBJEXT) GridObject.$(OBJEXT) Inventory.$(OBJEXT) \
	items.$(OBJEXT) KindDescriptor.$(OBJEXT) laser.$(OBJEXT) \
	LocalToXML.$(OBJEXT) lua.$(OBJEXT) lua-display.$(OBJEXT) \
	lua-enigma.$(OBJEXT) lua-global.$(OBJEXT) lua-ecl.$(OBJEXT) \
	main.$(OBJEXT) MessageDescriptor.$(OBJEXT) netgame.$(OBJEXT) \
	network.$(OBJEXT) nls.$(OBJEXT) Object.$(OBJEXT) \
	ObjectValidator.$(OBJEXT) oxyd.$(OBJEXT) ox_extra.$(OBJEXT) \
	ox_magnum.$(OBJEXT) ox_oxyd1.$(OBJEXT) ox_peroxyd.$(OBJEXT) \
	options.$(OBJEXT) player.$(OBJEXT) PreferenceManager.$(OBJEXT) \
	PropertyManager.$(OBJEXT) resource_cache.$(OBJEXT) \
	server.$(OBJEXT) SoundEffectManager.$(OBJEXT) \
	SoundEngine.$(OBJEXT) MusicManager.$(OBJEXT) \
	StateObject.$(OBJEXT) StateManager.$(OBJEXT) stones.$(OBJEXT) \
	timer.$(OBJEXT) Utf8ToXML.$(OBJEXT) utilXML.$(OBJEXT) \
	Value.$(OBJEXT) video.$(OBJEXT) WorldProxy.$(OBJEXT) \
	world.$(OBJEXT) XMLtoLocal.$(OBJEXT) XMLtoUtf8.$(OBJEXT) \
	actors/Balls.$(OBJEXT) actors/BugActor.$(OBJEXT) \
	actors/HorseActor.$(OBJEXT) actors/KillerActor.$(OBJEXT) \
	actors/Rotors.$(OBJEXT) floors/BridgeFloor.$(OBJEXT) \
	floors/FloodStream.$(OBJEXT) floors/ScalesFloor.$(OBJEXT) \
	floors/SimpleFloors.$(OBJEXT) floors/SlopeFloor.$(OBJEXT) \
	floors/StandardFloors.$(OBJEXT) floors/ThiefFloor.$(OBJEXT) \
	gui/ErrorMenu.$(OBJEXT) gui/GameMenu.$(OBJEXT) \
	gui/HelpMenu.$(OBJEXT) gui/InfoMenu.$(OBJEXT) \
	gui/LevelInspector.$(OBJEXT) gui/LevelMenu.$(OBJEXT) \
	gui/LevelPackComposer.$(OBJEXT) gui/LevelPackConfig.$(OBJEXT) \
	gui/LevelPackMenu.$(OBJEXT) gui/LevelPreviewCache.$(OBJEXT) \
	gui/LevelWidget.$(OBJEXT) gui/LPGroupConfig.$(OBJEXT) \
	gui/MainMenu.$(OBJEXT) gui/Menu.$(OBJEXT) \
	gui/MonospacedLabel.$(OBJEXT) gui/OptionsMenu.$(OBJEXT) \
	gui/ScreenshotViewer.$(OBJEXT) gui/SearchMenu.$(OBJEXT) \
	gui/TextField.$(OBJEXT) gui/widgets.$(OBJEXT) \
	items/BagItem.$(OBJEXT) items/BrakeItem.$(OBJEXT) \
	items/BlockerItem.$(OBJEXT) items/Bomb.$(OBJEXT) \
	items/Bottle.$(OBJEXT) items/BurnableItem.$(OBJEXT) \
	items/Coin.$(OBJEXT) items/CompatibilityItems.$(OBJEXT) \
	items/Crack.$(OBJEXT) items/CrossItem.$(OBJEXT) \
	items/DocumentItem.$(OBJEXT) items/Drop.$(OBJEXT) \
	items/Dynamite.$(OBJEXT) items/Extinguisher.$(OBJEXT) \
	items/ExtraLife.$(OBJEXT) items/GlassesItem.$(OBJEXT) \
	items/Hammer.$(OBJEXT) items/Landmine.$(OBJEXT) \
	items/Magnet.$(OBJEXT) items/Meditation.$(OBJEXT) \
	items/PipeItem.$(OBJEXT) items/PullerItem.$(OBJEXT) \
	items/RubberbandItem.$(OBJEXT) items/SeedItem.$(OBJEXT) \
	items/Sensor.$(OBJEXT) items/ShogunDot.$(OBJEXT) \
	items/SimpleItems.$(OBJEXT) items/StripItem.$(OBJEXT) \
	items/SurpriseItem.$(OBJEXT) items/Sword.$(OBJEXT) \
	items/TrapItem.$(OBJEXT) items/Trigger.$(OBJEXT) \
	items/Umbrella.$(OBJEXT) items/Vortex.$(OBJEXT) \
	items/WormHole.$(OBJEXT) lev/Index.$(OBJEXT) \
	lev/RatingManager.$(OBJEXT) lev/PersistentIndex.$(OBJEXT) \
	lev/Proxy.$(OBJEXT) lev/ScoreManager.$(OBJEXT) \
	lev/SubProxy.$(OBJEXT) lev/VolatileIndex.$(OBJEXT) \
	others/CannonBall.$(OBJEXT) others/CounterGadget.$(OBJEXT) \
	others/Other.$(OBJEXT) others/Rubberband.$(OBJEXT) \
	others/TimerGadget.$(OBJEXT) others/Wire.$(OBJEXT) \
	stones/ActorImpulseStone.$(OBJEXT) \
	stones/BarrierStone.$(OBJEXT) stones/BlockerStone.$(OBJEXT) \
	stones/BoulderStone.$(OBJEXT) stones/BrakeStone.$(OBJEXT) \
	stones/BreakStone.$(OBJEXT) stones/ChameleonStone.$(OBJEXT) \
	stones/ChessStone.$(OBJEXT) stones/ClusterStone.$(OBJEXT) \
	stones/CoinSlot.$(OBJEXT) stones/CompatibilityStones.$(OBJEXT) \
	stones/DeathStone.$(OBJEXT) stones/DiscoStone.$(OBJEXT) \
	stones/DispenserStone.$(OBJEXT) stones/Door.$(OBJEXT) \
	stones/FakeStone.$(OBJEXT) stones/FlatStone.$(OBJEXT) \
	stones/BoxStone.$(OBJEXT) stones/FloppySwitch.$(OBJEXT) \
	stones/FourSwitch.$(OBJEXT) stones/GhostStone.$(OBJEXT) \
	stones/GlassStones.$(OBJEXT) stones/GreenBrownStone.$(OBJEXT) \
	stones/IceBlock.$(OBJEXT) stones/JambStone.$(OBJEXT) \
	stones/KeySwitch.$(OBJEXT) stones/KnightStone.$(OBJEXT) \
	stones/LaserStone.$(OBJEXT) stones/LaserSwitch.$(OBJEXT) \
	stones/LightPassengerStone.$(OBJEXT) \
	stones/MagicStone.$(OBJEXT) stones/MailStone.$(OBJEXT) \
	stones/MirrorStone.$(OBJEXT) stones/MonoFlopStone.$(OBJEXT) \
	stones/OneWayStone.$(OBJEXT) stones/OxydStone.$(OBJEXT) \
	stones/PassageStone.$(OBJEXT) stones/PlasterStone.$(OBJEXT) \
	stones/PolarSwitchStone.$(OBJEXT) stones/PortalStone.$(OBJEXT) \
	stones/PullStone.$(OBJEXT) stones/PuzzleStone.$(OBJEXT) \
	stones/QuakeStone.$(OBJEXT) stones/RotatorStone.$(OBJEXT) \
	stones/RubberbandStone.$(OBJEXT) \
	stones/ScissorsStone.$(OBJEXT) stones/ShogunStone.$(OBJEXT) \
	stones/SimpleStones.$(OBJEXT) stones/SpitterStone.$(OBJEXT) \
	stones/StandardStones.$(OBJEXT) stones/StoneImpulse.$(OBJEXT) \
	stones/SurpriseStone.$(OBJEXT) stones/SwapStone.$(OBJEXT) \
	stones/Switch.$(OBJEXT) stones/ThiefStone.$(OBJEXT) \
	stones/TimerStone.$(OBJEXT) stones/Turnstile.$(OBJEXT) \
	stones/VolcanoStone.$(OBJEXT) stones/WindowStone.$(OBJEXT) \
	stones/YieldingStone.$(OBJEXT)
enigma_OBJECTS = $(am_enigma_OBJECTS)
am__DEPENDENCIES_1 =
#am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1)
#am__DEPENDENCIES_3 = enigma_ico.o
enigma_DEPENDENCIES = $(top_builddir)/lib-src/enigma-core/libecl.a \
	$(top_builddir)/lib-src/lua/liblua.a $(am__DEPENDENCIES_2) \
	$(am__append_4) $(top_builddir)/lib-src/oxydlib/liboxyd.a \
	$(top_builddir)/lib-src/zipios++/src/libzipios.a \
	$(am__DEPENDENCIES_3)
enigma_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(enigma_LDFLAGS) \
	$(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(enigma_SOURCES)
DIST_SOURCES = $(enigma_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(top_srcdir)/depcomp $(top_srcdir)/mkinstalldirs
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/seeschloss/src/enigma/missing aclocal-1.15
ALLOCA = 
ALL_LINGUAS = de fr nl it es sv ru hu pt fi uk be el pl cs gd hr sk da
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/seeschloss/src/enigma/missing autoconf
AUTOHEADER = ${SHELL} /home/seeschloss/src/enigma/missing autoheader
AUTOMAKE = ${SHELL} /home/seeschloss/src/enigma/missing automake-1.15
AWK = gawk
BUILD_INCLUDED_LIBINTL = no
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONVERT = /usr/bin/convert
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DENABLE_ASSERT -g -DCXXLUA -DSYSTEM_DATA_DIR=\"$(datadir)/enigma\" \
	-DDOCDIR=\"$(docdir)\" -DLOCALEDIR=\"$(localedir_enigma)\" \
	-I$(top_srcdir)/lib-src/zipios++ \
	-I$(top_builddir)/lib-src/zipios++ -I$(top_srcdir)/lib-src/lua \
	-I$(top_srcdir)/lib-src/enigma-core $(am__append_1) \
	$(am__append_2) -I$(top_srcdir)/lib-src -I$(top_builddir)/intl \
	-I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT $(am__empty)
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GENCAT = gencat
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_ASPRINTF = 1
HAVE_CXX11 = 
HAVE_POSIX_PRINTF = 1
HAVE_SNPRINTF = 1
HAVE_WPRINTF = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LDFLAGS = 
LIBENET_CFLAGS = 
LIBENET_LIBS = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lcurl -lxerces-c -lpng -ldl 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/seeschloss/src/enigma/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = enigma
PACKAGE_BUGREPORT = 
PACKAGE_NAME = enigma
PACKAGE_STRING = enigma 1.21
PACKAGE_TARNAME = enigma
PACKAGE_URL = 
PACKAGE_VERSION = 1.21
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread -lSDL_image -lSDL_mixer -lSDL_ttf
SDL_STATIC_PREFIX = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TEXI2HTML = 

# Rule for creating Lua interfaces from package descriptions using 'tolua'
TOLUA = $(top_builddir)/tools/tolua
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 1.21
WINDRES = windres
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/seeschloss/src/enigma/src
abs_srcdir = /home/seeschloss/src/enigma/src
abs_top_builddir = /home/seeschloss/src/enigma
abs_top_srcdir = /home/seeschloss/src/enigma
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/seeschloss/src/enigma/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  lib-src/enet lib-src/zipios++
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

#
# Makefile prototype for Enigma.
#
AUTOMAKE_OPTIONS = subdir-objects
EXTRA_DIST = \
	enigma.ico \
	enigma.rc

enigma_SOURCES = \
	actors.hh 		\
	actors.cc 		\
	actors_internal.hh	\
	AttributeDescriptor.cc	\
	AttributeDescriptor.hh	\
	client.cc 		\
	client.hh 		\
	client_internal.hh	\
	DOMErrorReporter.hh     \
	DOMErrorReporter.cc     \
	DOMSchemaResolver.cc	\
	DOMSchemaResolver.hh	\
	d_follower.cc		\
	d_follower.hh		\
	d_models.cc 		\
	d_models.hh		\
	display.hh 		\
	display.cc 		\
	display_internal.hh	\
	d_engine.hh		\
	enigma.cc 		\
	enigma.hh		\
	enet_ver.hh		\
	errors.hh		\
	file.cc 		\
	file.hh 		\
	file_zip.cc 		\
	floors.cc 		\
	floors.hh		\
	game.cc			\
	game.hh			\
	GridObject.cc 		\
	GridObject.hh 		\
	Inventory.cc		\
	Inventory.hh		\
	ItemHolder.hh		\
	items.cc 		\
	items.hh		\
	KindDescriptor.cc	\
	KindDescriptor.hh	\
	laser.cc 		\
	laser.hh		\
	LocalToXML.cc		\
	LocalToXML.hh		\
	lua.cc 			\
	lua.hh			\
	lua-display.cc 		\
	lua-display.hh		\
	lua-enigma.cc 		\
	lua-enigma.hh		\
	lua-global.cc 		\
	lua-global.hh		\
	lua-ecl.cc 		\
	lua-ecl.hh		\
	main.cc 		\
	main.hh			\
	MessageDescriptor.cc	\
	MessageDescriptor.hh	\
	netgame.cc 		\
	netgame.hh 		\
	network.cc		\
	network.hh		\
	nls.cc 			\
	nls.hh			\
	Object.cc 		\
	Object.hh 		\
	ObjectValidator.cc	\
	ObjectValidator.hh	\
	oxyd.cc			\
	oxyd.hh 		\
	oxyd_internal.hh	\
	ox_extra.cc		\
	ox_magnum.cc		\
	ox_oxyd1.cc		\
	ox_peroxyd.cc		\
	options.cc 		\
	options.hh		\
	player.cc 		\
	player.hh		\
	PreferenceManager.cc	\
	PreferenceManager.hh	\
	PropertyManager.cc	\
	PropertyManager.hh	\
	resource_cache.cc	\
	resource_cache.hh	\
	server.cc 		\
	server.hh		\
	SoundEffectManager.cc   \
	SoundEffectManager.hh   \
	SoundEngine.cc          \
	SoundEngine.hh 		\
	MusicManager.cc		\
	MusicManager.hh         \
	StateObject.cc		\
	StateObject.hh		\
	StateManager.cc		\
	StateManager.hh		\
	stones.cc 		\
	stones.hh 		\
	stones_internal.hh 	\
	timer.cc 		\
	timer.hh		\
	Utf8ToXML.cc		\
	Utf8ToXML.hh		\
	utilXML.cc		\
	utilXML.hh		\
	Value.cc		\
	Value.hh		\
	video.cc 		\
	video.hh		\
	WorldProxy.cc		\
	WorldProxy.hh		\
	world.cc 		\
	world.hh 		\
	world_internal.hh	\
	XMLtoLocal.cc		\
	XMLtoLocal.hh		\
	XMLtoUtf8.cc		\
	XMLtoUtf8.hh		\
	actors/Balls.cc		\
	actors/Balls.hh		\
	actors/BugActor.cc	\
	actors/BugActor.hh	\
	actors/HorseActor.cc	\
	actors/HorseActor.hh	\
	actors/KillerActor.cc	\
	actors/KillerActor.hh	\
	actors/Rotors.cc	\
	actors/Rotors.hh	\
	floors/BridgeFloor.cc	\
	floors/BridgeFloor.hh	\
	floors/FloodStream.cc	\
	floors/FloodStream.hh	\
	floors/ScalesFloor.cc	\
	floors/ScalesFloor.hh	\
	floors/SimpleFloors.cc	\
	floors/SimpleFloors.hh	\
	floors/SlopeFloor.cc	\
	floors/SlopeFloor.hh	\
	floors/StandardFloors.cc	\
	floors/StandardFloors.hh	\
	floors/ThiefFloor.cc	\
	floors/ThiefFloor.hh	\
	gui/ErrorMenu.cc	\
	gui/ErrorMenu.hh	\
	gui/GameMenu.cc		\
	gui/GameMenu.hh		\
	gui/HelpMenu.cc		\
	gui/HelpMenu.hh		\
	gui/InfoMenu.cc		\
	gui/InfoMenu.hh		\
	gui/LevelInspector.cc	\
	gui/LevelInspector.hh	\
	gui/LevelMenu.cc	\
	gui/LevelMenu.hh	\
	gui/LevelPackComposer.cc \
	gui/LevelPackComposer.hh \
	gui/LevelPackConfig.cc	\
	gui/LevelPackConfig.hh	\
	gui/LevelPackMenu.cc	\
	gui/LevelPackMenu.hh	\
	gui/LevelPreviewCache.cc \
	gui/LevelPreviewCache.hh \
	gui/LevelWidget.cc	\
	gui/LevelWidget.hh	\
	gui/LPGroupConfig.cc	\
	gui/LPGroupConfig.hh	\
	gui/MainMenu.cc		\
	gui/MainMenu.hh		\
	gui/Menu.cc		\
	gui/Menu.hh		\
	gui/MonospacedLabel.cc	\
	gui/MonospacedLabel.hh	\
	gui/OptionsMenu.cc	\
	gui/OptionsMenu.hh	\
	gui/ScreenshotViewer.cc	\
	gui/ScreenshotViewer.hh	\
	gui/SearchMenu.cc	\
	gui/SearchMenu.hh	\
	gui/TextField.cc	\
	gui/TextField.hh	\
	gui/widgets.cc		\
	gui/widgets.hh		\
	items/BagItem.cc	\
	items/BagItem.hh	\
	items/BrakeItem.cc	\
	items/BrakeItem.hh	\
	items/BlockerItem.cc	\
	items/BlockerItem.hh	\
	items/Bomb.cc		\
	items/Bomb.hh		\
	items/Bottle.cc		\
	items/Bottle.hh		\
	items/BurnableItem.cc	\
	items/BurnableItem.hh	\
	items/Coin.cc		\
	items/Coin.hh		\
	items/CompatibilityItems.cc	\
	items/CompatibilityItems.hh	\
	items/Crack.cc		\
	items/Crack.hh		\
	items/CrossItem.cc	\
	items/CrossItem.hh	\
	items/DocumentItem.cc	\
	items/DocumentItem.hh	\
	items/Drop.cc		\
	items/Drop.hh		\
	items/Dynamite.cc	\
	items/Dynamite.hh	\
	items/Extinguisher.cc	\
	items/Extinguisher.hh	\
	items/ExtraLife.cc	\
	items/ExtraLife.hh	\
	items/GlassesItem.cc	\
	items/GlassesItem.hh	\
	items/Hammer.cc		\
	items/Hammer.hh		\
	items/Landmine.cc	\
	items/Landmine.hh	\
	items/Magnet.cc		\
	items/Magnet.hh		\
	items/Meditation.cc	\
	items/Meditation.hh	\
	items/PipeItem.cc	\
	items/PipeItem.hh	\
	items/PullerItem.cc	\
	items/PullerItem.hh	\
	items/RubberbandItem.cc	\
	items/RubberbandItem.hh	\
	items/SeedItem.cc	\
	items/SeedItem.hh	\
	items/Sensor.cc		\
	items/Sensor.hh		\
	items/ShogunDot.cc	\
	items/ShogunDot.hh	\
	items/SimpleItems.cc	\
	items/SimpleItems.hh	\
	items/StripItem.cc	\
	items/StripItem.hh	\
	items/SurpriseItem.cc	\
	items/SurpriseItem.hh	\
	items/Sword.cc		\
	items/Sword.hh		\
	items/TrapItem.cc	\
	items/TrapItem.hh	\
	items/Trigger.cc	\
	items/Trigger.hh	\
	items/Umbrella.cc	\
	items/Umbrella.hh	\
	items/Vortex.cc		\
	items/Vortex.hh		\
	items/WormHole.cc	\
	items/WormHole.hh	\
	lev/Index.cc		\
	lev/Index.hh		\
	lev/RatingManager.cc	\
	lev/RatingManager.hh	\
	lev/PersistentIndex.cc	\
	lev/PersistentIndex.hh	\
	lev/Proxy.cc		\
	lev/Proxy.hh		\
	lev/ScoreManager.cc	\
	lev/ScoreManager.hh	\
	lev/SubProxy.cc		\
	lev/SubProxy.hh		\
	lev/VolatileIndex.cc	\
	lev/VolatileIndex.hh	\
	others/CannonBall.cc	\
	others/CannonBall.hh	\
	others/CounterGadget.cc	\
	others/CounterGadget.hh	\
	others/Other.cc		\
	others/Other.hh		\
	others/Rubberband.cc	\
	others/Rubberband.hh	\
	others/TimerGadget.cc	\
	others/TimerGadget.hh	\
	others/Wire.cc		\
	others/Wire.hh		\
	stones/ActorImpulseStone.cc	\
	stones/ActorImpulseStone.hh	\
	stones/BarrierStone.cc   \
	stones/BarrierStone.hh   \
	stones/BlockerStone.cc	\
	stones/BlockerStone.hh	\
	stones/BoulderStone.cc	\
	stones/BoulderStone.hh	\
	stones/BrakeStone.cc	\
	stones/BrakeStone.hh	\
	stones/BreakStone.cc	\
	stones/BreakStone.hh	\
	stones/ChameleonStone.cc	\
	stones/ChameleonStone.hh	\
	stones/ChessStone.cc	\
	stones/ChessStone.hh	\
	stones/ClusterStone.cc	\
	stones/ClusterStone.hh	\
	stones/CoinSlot.cc	\
	stones/CoinSlot.hh	\
	stones/CompatibilityStones.cc	\
	stones/CompatibilityStones.hh	\
	stones/DeathStone.cc	\
	stones/DeathStone.hh	\
	stones/DiscoStone.cc	\
	stones/DiscoStone.hh	\
	stones/DispenserStone.cc	\
	stones/DispenserStone.hh	\
	stones/Door.cc		\
	stones/Door.hh		\
	stones/FakeStone.cc	\
	stones/FakeStone.hh	\
	stones/FlatStone.cc	\
	stones/FlatStone.hh	\
	stones/BoxStone.cc	\
	stones/BoxStone.hh	\
	stones/FloppySwitch.cc	\
	stones/FloppySwitch.hh	\
	stones/FourSwitch.cc	\
	stones/FourSwitch.hh	\
	stones/GhostStone.cc	\
	stones/GhostStone.hh	\
	stones/GlassStones.cc	\
	stones/GlassStones.hh	\
	stones/GreenBrownStone.cc	\
	stones/GreenBrownStone.hh	\
	stones/IceBlock.cc	\
	stones/IceBlock.hh	\
	stones/JambStone.cc	\
	stones/JambStone.hh	\
	stones/KeySwitch.cc	\
	stones/KeySwitch.hh	\
	stones/KnightStone.cc	\
	stones/KnightStone.hh	\
	stones/LaserStone.cc	\
	stones/LaserStone.hh	\
	stones/LaserSwitch.cc	\
	stones/LaserSwitch.hh	\
	stones/LightPassengerStone.cc	\
	stones/LightPassengerStone.hh	\
	stones/MagicStone.cc	\
	stones/MagicStone.hh	\
	stones/MailStone.cc	\
	stones/MailStone.hh	\
	stones/MirrorStone.cc	\
	stones/MirrorStone.hh	\
	stones/MonoFlopStone.cc	\
	stones/MonoFlopStone.hh	\
	stones/OneWayStone.cc	\
	stones/OneWayStone.hh	\
	stones/OxydStone.cc	\
	stones/OxydStone.hh	\
	stones/PassageStone.cc	\
	stones/PassageStone.hh	\
	stones/PlasterStone.cc	\
	stones/PlasterStone.hh	\
	stones/PolarSwitchStone.cc	\
	stones/PolarSwitchStone.hh	\
	stones/PortalStone.cc	\
	stones/PortalStone.hh	\
	stones/PullStone.cc	\
	stones/PullStone.hh	\
	stones/PuzzleStone.cc	\
	stones/PuzzleStone.hh	\
	stones/QuakeStone.cc	\
	stones/QuakeStone.hh	\
	stones/RotatorStone.cc	\
	stones/RotatorStone.hh	\
	stones/RubberbandStone.cc	\
	stones/RubberbandStone.hh	\
	stones/ScissorsStone.cc	\
	stones/ScissorsStone.hh	\
	stones/ShogunStone.cc	\
	stones/ShogunStone.hh	\
	stones/SimpleStones.cc	\
	stones/SimpleStones.hh	\
	stones/SpitterStone.cc	\
	stones/SpitterStone.hh	\
	stones/StandardStones.cc	\
	stones/StandardStones.hh	\
	stones/StoneImpulse.cc	\
	stones/StoneImpulse.hh	\
	stones/SurpriseStone.cc	\
	stones/SurpriseStone.hh	\
	stones/SwapStone.cc	\
	stones/SwapStone.hh	\
	stones/Switch.cc	\
	stones/Switch.hh	\
	stones/ThiefStone.cc	\
	stones/ThiefStone.hh	\
	stones/TimerStone.cc	\
	stones/TimerStone.hh	\
	stones/Turnstile.cc	\
	stones/Turnstile.hh	\
	stones/VolcanoStone.cc	\
	stones/VolcanoStone.hh	\
	stones/WindowStone.cc	\
	stones/WindowStone.hh	\
	stones/YieldingStone.cc	\
	stones/YieldingStone.hh

localedir_enigma := $(datadir)/locale
#localedir_enigma := data/locale
mingw_ldadd = 
#mingw_ldadd := enigma_ico.o -lws2_32 -lSDL_image -ltiff -llzma -ljpeg -lpng15 -lSDL_mixer -lmikmod -lsmpeg -lstdc++ -lvorbisfile -lvorbis -logg -lSDL_ttf -lcurl -lidn -lwldap32 -lgnutls -lhogweed -lgmp -lz -lnettle -lssh2 -lgcrypt -lgpg-error -lws2_32 -lfreetype -lintl
#enigma_LDFLAGS := -mwindows -pthread
enigma_LDADD =  $(top_builddir)/lib-src/enigma-core/libecl.a \
	$(top_builddir)/lib-src/lua/liblua.a $(am__append_3) \
	$(am__append_4) $(top_builddir)/lib-src/oxydlib/liboxyd.a \
	$(top_builddir)/lib-src/zipios++/src/libzipios.a -lz \
	$(mingw_ldadd) -L/usr/lib -lSDL -lpthread -lSDL_image -lSDL_mixer -lSDL_ttf

#------------------ Packaging rules for Mac OSX ------------------------
bundle_root := $(top_builddir)/etc/macfiles
bundle_name := $(bundle_root)/Enigma.app

# Special target to copy the doc files to the MacOS dmg staging area
bundle_doc := $(bundle_name)/Contents/Resources/doc
all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/config.h
$(srcdir)/config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
actors/$(am__dirstamp):
	@$(MKDIR_P) actors
	@: > actors/$(am__dirstamp)
actors/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) actors/$(DEPDIR)
	@: > actors/$(DEPDIR)/$(am__dirstamp)
actors/Balls.$(OBJEXT): actors/$(am__dirstamp) \
	actors/$(DEPDIR)/$(am__dirstamp)
actors/BugActor.$(OBJEXT): actors/$(am__dirstamp) \
	actors/$(DEPDIR)/$(am__dirstamp)
actors/HorseActor.$(OBJEXT): actors/$(am__dirstamp) \
	actors/$(DEPDIR)/$(am__dirstamp)
actors/KillerActor.$(OBJEXT): actors/$(am__dirstamp) \
	actors/$(DEPDIR)/$(am__dirstamp)
actors/Rotors.$(OBJEXT): actors/$(am__dirstamp) \
	actors/$(DEPDIR)/$(am__dirstamp)
floors/$(am__dirstamp):
	@$(MKDIR_P) floors
	@: > floors/$(am__dirstamp)
floors/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) floors/$(DEPDIR)
	@: > floors/$(DEPDIR)/$(am__dirstamp)
floors/BridgeFloor.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/FloodStream.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/ScalesFloor.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/SimpleFloors.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/SlopeFloor.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/StandardFloors.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
floors/ThiefFloor.$(OBJEXT): floors/$(am__dirstamp) \
	floors/$(DEPDIR)/$(am__dirstamp)
gui/$(am__dirstamp):
	@$(MKDIR_P) gui
	@: > gui/$(am__dirstamp)
gui/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) gui/$(DEPDIR)
	@: > gui/$(DEPDIR)/$(am__dirstamp)
gui/ErrorMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/GameMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/HelpMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/InfoMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelInspector.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelPackComposer.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelPackConfig.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelPackMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelPreviewCache.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LevelWidget.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/LPGroupConfig.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/MainMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/Menu.$(OBJEXT): gui/$(am__dirstamp) gui/$(DEPDIR)/$(am__dirstamp)
gui/MonospacedLabel.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/OptionsMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/ScreenshotViewer.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/SearchMenu.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/TextField.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
gui/widgets.$(OBJEXT): gui/$(am__dirstamp) \
	gui/$(DEPDIR)/$(am__dirstamp)
items/$(am__dirstamp):
	@$(MKDIR_P) items
	@: > items/$(am__dirstamp)
items/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) items/$(DEPDIR)
	@: > items/$(DEPDIR)/$(am__dirstamp)
items/BagItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/BrakeItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/BlockerItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Bomb.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Bottle.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/BurnableItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Coin.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/CompatibilityItems.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Crack.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/CrossItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/DocumentItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Drop.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Dynamite.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Extinguisher.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/ExtraLife.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/GlassesItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Hammer.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Landmine.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Magnet.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Meditation.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/PipeItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/PullerItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/RubberbandItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/SeedItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Sensor.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/ShogunDot.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/SimpleItems.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/StripItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/SurpriseItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Sword.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/TrapItem.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Trigger.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Umbrella.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/Vortex.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
items/WormHole.$(OBJEXT): items/$(am__dirstamp) \
	items/$(DEPDIR)/$(am__dirstamp)
lev/$(am__dirstamp):
	@$(MKDIR_P) lev
	@: > lev/$(am__dirstamp)
lev/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) lev/$(DEPDIR)
	@: > lev/$(DEPDIR)/$(am__dirstamp)
lev/Index.$(OBJEXT): lev/$(am__dirstamp) lev/$(DEPDIR)/$(am__dirstamp)
lev/RatingManager.$(OBJEXT): lev/$(am__dirstamp) \
	lev/$(DEPDIR)/$(am__dirstamp)
lev/PersistentIndex.$(OBJEXT): lev/$(am__dirstamp) \
	lev/$(DEPDIR)/$(am__dirstamp)
lev/Proxy.$(OBJEXT): lev/$(am__dirstamp) lev/$(DEPDIR)/$(am__dirstamp)
lev/ScoreManager.$(OBJEXT): lev/$(am__dirstamp) \
	lev/$(DEPDIR)/$(am__dirstamp)
lev/SubProxy.$(OBJEXT): lev/$(am__dirstamp) \
	lev/$(DEPDIR)/$(am__dirstamp)
lev/VolatileIndex.$(OBJEXT): lev/$(am__dirstamp) \
	lev/$(DEPDIR)/$(am__dirstamp)
others/$(am__dirstamp):
	@$(MKDIR_P) others
	@: > others/$(am__dirstamp)
others/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) others/$(DEPDIR)
	@: > others/$(DEPDIR)/$(am__dirstamp)
others/CannonBall.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
others/CounterGadget.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
others/Other.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
others/Rubberband.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
others/TimerGadget.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
others/Wire.$(OBJEXT): others/$(am__dirstamp) \
	others/$(DEPDIR)/$(am__dirstamp)
stones/$(am__dirstamp):
	@$(MKDIR_P) stones
	@: > stones/$(am__dirstamp)
stones/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) stones/$(DEPDIR)
	@: > stones/$(DEPDIR)/$(am__dirstamp)
stones/ActorImpulseStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BarrierStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BlockerStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BoulderStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BrakeStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BreakStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ChameleonStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ChessStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ClusterStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/CoinSlot.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/CompatibilityStones.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/DeathStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/DiscoStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/DispenserStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/Door.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/FakeStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/FlatStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/BoxStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/FloppySwitch.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/FourSwitch.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/GhostStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/GlassStones.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/GreenBrownStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/IceBlock.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/JambStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/KeySwitch.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/KnightStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/LaserStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/LaserSwitch.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/LightPassengerStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/MagicStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/MailStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/MirrorStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/MonoFlopStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/OneWayStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/OxydStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PassageStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PlasterStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PolarSwitchStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PortalStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PullStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/PuzzleStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/QuakeStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/RotatorStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/RubberbandStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ScissorsStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ShogunStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/SimpleStones.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/SpitterStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/StandardStones.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/StoneImpulse.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/SurpriseStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/SwapStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/Switch.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/ThiefStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/TimerStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/Turnstile.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/VolcanoStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/WindowStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)
stones/YieldingStone.$(OBJEXT): stones/$(am__dirstamp) \
	stones/$(DEPDIR)/$(am__dirstamp)

enigma$(EXEEXT): $(enigma_OBJECTS) $(enigma_DEPENDENCIES) $(EXTRA_enigma_DEPENDENCIES) 
	@rm -f enigma$(EXEEXT)
	$(AM_V_CXXLD)$(enigma_LINK) $(enigma_OBJECTS) $(enigma_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f actors/*.$(OBJEXT)
	-rm -f floors/*.$(OBJEXT)
	-rm -f gui/*.$(OBJEXT)
	-rm -f items/*.$(OBJEXT)
	-rm -f lev/*.$(OBJEXT)
	-rm -f others/*.$(OBJEXT)
	-rm -f stones/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/AttributeDescriptor.Po
include ./$(DEPDIR)/DOMErrorReporter.Po
include ./$(DEPDIR)/DOMSchemaResolver.Po
include ./$(DEPDIR)/GridObject.Po
include ./$(DEPDIR)/Inventory.Po
include ./$(DEPDIR)/KindDescriptor.Po
include ./$(DEPDIR)/LocalToXML.Po
include ./$(DEPDIR)/MessageDescriptor.Po
include ./$(DEPDIR)/MusicManager.Po
include ./$(DEPDIR)/Object.Po
include ./$(DEPDIR)/ObjectValidator.Po
include ./$(DEPDIR)/PreferenceManager.Po
include ./$(DEPDIR)/PropertyManager.Po
include ./$(DEPDIR)/SoundEffectManager.Po
include ./$(DEPDIR)/SoundEngine.Po
include ./$(DEPDIR)/StateManager.Po
include ./$(DEPDIR)/StateObject.Po
include ./$(DEPDIR)/Utf8ToXML.Po
include ./$(DEPDIR)/Value.Po
include ./$(DEPDIR)/WorldProxy.Po
include ./$(DEPDIR)/XMLtoLocal.Po
include ./$(DEPDIR)/XMLtoUtf8.Po
include ./$(DEPDIR)/actors.Po
include ./$(DEPDIR)/client.Po
include ./$(DEPDIR)/d_follower.Po
include ./$(DEPDIR)/d_models.Po
include ./$(DEPDIR)/display.Po
include ./$(DEPDIR)/enigma.Po
include ./$(DEPDIR)/file.Po
include ./$(DEPDIR)/file_zip.Po
include ./$(DEPDIR)/floors.Po
include ./$(DEPDIR)/game.Po
include ./$(DEPDIR)/items.Po
include ./$(DEPDIR)/laser.Po
include ./$(DEPDIR)/lua-display.Po
include ./$(DEPDIR)/lua-ecl.Po
include ./$(DEPDIR)/lua-enigma.Po
include ./$(DEPDIR)/lua-global.Po
include ./$(DEPDIR)/lua.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/netgame.Po
include ./$(DEPDIR)/network.Po
include ./$(DEPDIR)/nls.Po
include ./$(DEPDIR)/options.Po
include ./$(DEPDIR)/ox_extra.Po
include ./$(DEPDIR)/ox_magnum.Po
include ./$(DEPDIR)/ox_oxyd1.Po
include ./$(DEPDIR)/ox_peroxyd.Po
include ./$(DEPDIR)/oxyd.Po
include ./$(DEPDIR)/player.Po
include ./$(DEPDIR)/resource_cache.Po
include ./$(DEPDIR)/server.Po
include ./$(DEPDIR)/stones.Po
include ./$(DEPDIR)/timer.Po
include ./$(DEPDIR)/utilXML.Po
include ./$(DEPDIR)/video.Po
include ./$(DEPDIR)/world.Po
include actors/$(DEPDIR)/Balls.Po
include actors/$(DEPDIR)/BugActor.Po
include actors/$(DEPDIR)/HorseActor.Po
include actors/$(DEPDIR)/KillerActor.Po
include actors/$(DEPDIR)/Rotors.Po
include floors/$(DEPDIR)/BridgeFloor.Po
include floors/$(DEPDIR)/FloodStream.Po
include floors/$(DEPDIR)/ScalesFloor.Po
include floors/$(DEPDIR)/SimpleFloors.Po
include floors/$(DEPDIR)/SlopeFloor.Po
include floors/$(DEPDIR)/StandardFloors.Po
include floors/$(DEPDIR)/ThiefFloor.Po
include gui/$(DEPDIR)/ErrorMenu.Po
include gui/$(DEPDIR)/GameMenu.Po
include gui/$(DEPDIR)/HelpMenu.Po
include gui/$(DEPDIR)/InfoMenu.Po
include gui/$(DEPDIR)/LPGroupConfig.Po
include gui/$(DEPDIR)/LevelInspector.Po
include gui/$(DEPDIR)/LevelMenu.Po
include gui/$(DEPDIR)/LevelPackComposer.Po
include gui/$(DEPDIR)/LevelPackConfig.Po
include gui/$(DEPDIR)/LevelPackMenu.Po
include gui/$(DEPDIR)/LevelPreviewCache.Po
include gui/$(DEPDIR)/LevelWidget.Po
include gui/$(DEPDIR)/MainMenu.Po
include gui/$(DEPDIR)/Menu.Po
include gui/$(DEPDIR)/MonospacedLabel.Po
include gui/$(DEPDIR)/OptionsMenu.Po
include gui/$(DEPDIR)/ScreenshotViewer.Po
include gui/$(DEPDIR)/SearchMenu.Po
include gui/$(DEPDIR)/TextField.Po
include gui/$(DEPDIR)/widgets.Po
include items/$(DEPDIR)/BagItem.Po
include items/$(DEPDIR)/BlockerItem.Po
include items/$(DEPDIR)/Bomb.Po
include items/$(DEPDIR)/Bottle.Po
include items/$(DEPDIR)/BrakeItem.Po
include items/$(DEPDIR)/BurnableItem.Po
include items/$(DEPDIR)/Coin.Po
include items/$(DEPDIR)/CompatibilityItems.Po
include items/$(DEPDIR)/Crack.Po
include items/$(DEPDIR)/CrossItem.Po
include items/$(DEPDIR)/DocumentItem.Po
include items/$(DEPDIR)/Drop.Po
include items/$(DEPDIR)/Dynamite.Po
include items/$(DEPDIR)/Extinguisher.Po
include items/$(DEPDIR)/ExtraLife.Po
include items/$(DEPDIR)/GlassesItem.Po
include items/$(DEPDIR)/Hammer.Po
include items/$(DEPDIR)/Landmine.Po
include items/$(DEPDIR)/Magnet.Po
include items/$(DEPDIR)/Meditation.Po
include items/$(DEPDIR)/PipeItem.Po
include items/$(DEPDIR)/PullerItem.Po
include items/$(DEPDIR)/RubberbandItem.Po
include items/$(DEPDIR)/SeedItem.Po
include items/$(DEPDIR)/Sensor.Po
include items/$(DEPDIR)/ShogunDot.Po
include items/$(DEPDIR)/SimpleItems.Po
include items/$(DEPDIR)/StripItem.Po
include items/$(DEPDIR)/SurpriseItem.Po
include items/$(DEPDIR)/Sword.Po
include items/$(DEPDIR)/TrapItem.Po
include items/$(DEPDIR)/Trigger.Po
include items/$(DEPDIR)/Umbrella.Po
include items/$(DEPDIR)/Vortex.Po
include items/$(DEPDIR)/WormHole.Po
include lev/$(DEPDIR)/Index.Po
include lev/$(DEPDIR)/PersistentIndex.Po
include lev/$(DEPDIR)/Proxy.Po
include lev/$(DEPDIR)/RatingManager.Po
include lev/$(DEPDIR)/ScoreManager.Po
include lev/$(DEPDIR)/SubProxy.Po
include lev/$(DEPDIR)/VolatileIndex.Po
include others/$(DEPDIR)/CannonBall.Po
include others/$(DEPDIR)/CounterGadget.Po
include others/$(DEPDIR)/Other.Po
include others/$(DEPDIR)/Rubberband.Po
include others/$(DEPDIR)/TimerGadget.Po
include others/$(DEPDIR)/Wire.Po
include stones/$(DEPDIR)/ActorImpulseStone.Po
include stones/$(DEPDIR)/BarrierStone.Po
include stones/$(DEPDIR)/BlockerStone.Po
include stones/$(DEPDIR)/BoulderStone.Po
include stones/$(DEPDIR)/BoxStone.Po
include stones/$(DEPDIR)/BrakeStone.Po
include stones/$(DEPDIR)/BreakStone.Po
include stones/$(DEPDIR)/ChameleonStone.Po
include stones/$(DEPDIR)/ChessStone.Po
include stones/$(DEPDIR)/ClusterStone.Po
include stones/$(DEPDIR)/CoinSlot.Po
include stones/$(DEPDIR)/CompatibilityStones.Po
include stones/$(DEPDIR)/DeathStone.Po
include stones/$(DEPDIR)/DiscoStone.Po
include stones/$(DEPDIR)/DispenserStone.Po
include stones/$(DEPDIR)/Door.Po
include stones/$(DEPDIR)/FakeStone.Po
include stones/$(DEPDIR)/FlatStone.Po
include stones/$(DEPDIR)/FloppySwitch.Po
include stones/$(DEPDIR)/FourSwitch.Po
include stones/$(DEPDIR)/GhostStone.Po
include stones/$(DEPDIR)/GlassStones.Po
include stones/$(DEPDIR)/GreenBrownStone.Po
include stones/$(DEPDIR)/IceBlock.Po
include stones/$(DEPDIR)/JambStone.Po
include stones/$(DEPDIR)/KeySwitch.Po
include stones/$(DEPDIR)/KnightStone.Po
include stones/$(DEPDIR)/LaserStone.Po
include stones/$(DEPDIR)/LaserSwitch.Po
include stones/$(DEPDIR)/LightPassengerStone.Po
include stones/$(DEPDIR)/MagicStone.Po
include stones/$(DEPDIR)/MailStone.Po
include stones/$(DEPDIR)/MirrorStone.Po
include stones/$(DEPDIR)/MonoFlopStone.Po
include stones/$(DEPDIR)/OneWayStone.Po
include stones/$(DEPDIR)/OxydStone.Po
include stones/$(DEPDIR)/PassageStone.Po
include stones/$(DEPDIR)/PlasterStone.Po
include stones/$(DEPDIR)/PolarSwitchStone.Po
include stones/$(DEPDIR)/PortalStone.Po
include stones/$(DEPDIR)/PullStone.Po
include stones/$(DEPDIR)/PuzzleStone.Po
include stones/$(DEPDIR)/QuakeStone.Po
include stones/$(DEPDIR)/RotatorStone.Po
include stones/$(DEPDIR)/RubberbandStone.Po
include stones/$(DEPDIR)/ScissorsStone.Po
include stones/$(DEPDIR)/ShogunStone.Po
include stones/$(DEPDIR)/SimpleStones.Po
include stones/$(DEPDIR)/SpitterStone.Po
include stones/$(DEPDIR)/StandardStones.Po
include stones/$(DEPDIR)/StoneImpulse.Po
include stones/$(DEPDIR)/SurpriseStone.Po
include stones/$(DEPDIR)/SwapStone.Po
include stones/$(DEPDIR)/Switch.Po
include stones/$(DEPDIR)/ThiefStone.Po
include stones/$(DEPDIR)/TimerStone.Po
include stones/$(DEPDIR)/Turnstile.Po
include stones/$(DEPDIR)/VolcanoStone.Po
include stones/$(DEPDIR)/WindowStone.Po
include stones/$(DEPDIR)/YieldingStone.Po

.cc.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f actors/$(DEPDIR)/$(am__dirstamp)
	-rm -f actors/$(am__dirstamp)
	-rm -f floors/$(DEPDIR)/$(am__dirstamp)
	-rm -f floors/$(am__dirstamp)
	-rm -f gui/$(DEPDIR)/$(am__dirstamp)
	-rm -f gui/$(am__dirstamp)
	-rm -f items/$(DEPDIR)/$(am__dirstamp)
	-rm -f items/$(am__dirstamp)
	-rm -f lev/$(DEPDIR)/$(am__dirstamp)
	-rm -f lev/$(am__dirstamp)
	-rm -f others/$(DEPDIR)/$(am__dirstamp)
	-rm -f others/$(am__dirstamp)
	-rm -f stones/$(DEPDIR)/$(am__dirstamp)
	-rm -f stones/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR) actors/$(DEPDIR) floors/$(DEPDIR) gui/$(DEPDIR) items/$(DEPDIR) lev/$(DEPDIR) others/$(DEPDIR) stones/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR) actors/$(DEPDIR) floors/$(DEPDIR) gui/$(DEPDIR) items/$(DEPDIR) lev/$(DEPDIR) others/$(DEPDIR) stones/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean \
	clean-binPROGRAMS clean-generic cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am uninstall-binPROGRAMS

.PRECIOUS: Makefile

#  # mingw_ldadd := enigma_ico.o -lws2_32
#  enigma_ico.o: enigma.rc enigma.ico
#	$(WINDRES) $(srcdir)/enigma.rc --include-dir=$(srcdir) -O coff -o enigma_ico.o
.PHONY: tolua
tolua:
	@if [ "x${TOLUA}" != "x" ]; then \
		echo "Running ${TOLUA}..."; \
		${TOLUA} -H lua-display.hh -n display -o lua-display.cc display-lua.pkg; \
		${TOLUA} -H lua-enigma.hh -n enigma -o lua-enigma.cc enigma-lua.pkg; \
		${TOLUA} -H lua-global.hh -n global -o lua-global.cc global-lua.pkg; \
		${TOLUA} -H lua-ecl.hh -n px -o lua-ecl.cc ecl-lua.pkg; \
	else \
		echo "$<:0: Warning: Can't update lua interface - tolua not installed "; \
	fi
# Special target to copy all needed game files to Enigma.app/Contents/Resources.
# For Mac OS X bundle.
.PHONY: bundle
bundle:
	-rm -rf $(bundle_root)
	mkdir -p $(bundle_name)/Contents/MacOS
	mkdir -p $(bundle_name)/Contents/Resources/data/
	echo "APPL????" > $(bundle_name)/Contents/PkgInfo
	cp $(top_builddir)/etc/Info.plist $(bundle_name)/Contents/
	cp $(top_builddir)/etc/enigma.icns $(bundle_name)/Contents/Resources/
	tar --exclude .svn -c -f - -C $(top_builddir)/data levels | tar xpf - -C $(bundle_name)/Contents/Resources/data
	cp $(top_builddir)/data/*.lua $(bundle_name)/Contents/Resources/data/
	cp $(top_builddir)/data/*.xml $(bundle_name)/Contents/Resources/data/
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx
	cp $(top_builddir)/data/gfx/*.png $(bundle_name)/Contents/Resources/data/gfx
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx/flags25x15
	cp $(top_builddir)/data/gfx/flags25x15/*.png $(bundle_name)/Contents/Resources/data/gfx/flags25x15
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx32
	cp $(top_builddir)/data/gfx32/*.png $(bundle_name)/Contents/Resources/data/gfx32
	cp $(top_builddir)/data/gfx32/*.jpg $(bundle_name)/Contents/Resources/data/gfx32
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx40
	cp $(top_builddir)/data/gfx40/*.png $(bundle_name)/Contents/Resources/data/gfx40
	cp $(top_builddir)/data/gfx40/*.jpg $(bundle_name)/Contents/Resources/data/gfx40
	mkdir -p $(bundle_name)/Contents/Resources/data/gfx48
	cp $(top_builddir)/data/gfx48/*.png $(bundle_name)/Contents/Resources/data/gfx48
	cp $(top_builddir)/data/gfx48/*.jpg $(bundle_name)/Contents/Resources/data/gfx48
	mkdir -p $(bundle_name)/Contents/Resources/data/schemas
	cp $(top_builddir)/data/schemas/*.xml $(bundle_name)/Contents/Resources/data/schemas
	cp $(top_builddir)/data/schemas/*.xsd $(bundle_name)/Contents/Resources/data/schemas
	mkdir -p $(bundle_name)/Contents/Resources/data/music
	mkdir -p $(bundle_name)/Contents/Resources/data/music/menu
	cp $(top_builddir)/data/music/menu/*.s3m $(bundle_name)/Contents/Resources/data/music/menu
	cp $(top_builddir)/data/music/menu/*.ogg $(bundle_name)/Contents/Resources/data/music/menu
	mkdir -p $(bundle_name)/Contents/Resources/data/soundsets
	mkdir -p $(bundle_name)/Contents/Resources/data/soundsets/enigma
	cp $(top_builddir)/data/soundsets/enigma/*.wav $(bundle_name)/Contents/Resources/data/soundsets/enigma
	mkdir -p $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.png $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.bmf $(bundle_name)/Contents/Resources/data/fonts
	cp $(top_builddir)/data/fonts/*.ttf $(bundle_name)/Contents/Resources/data/fonts
	for cat in $(ALL_LINGUAS); do \
	  dir=$(bundle_name)/Contents/Resources/locale/$$cat/LC_MESSAGES; \
	  mkdir -p $$dir; \
	  echo "installing $$cat as $$dir/enigma.mo"; \
	  cp $(top_builddir)/po/$$cat.gmo $$dir/enigma.mo; \
	done

# Special target to copy the binary to Enigma.app/Contents/MacOS.
.PHONY: bundle-fw
bundle-fw:
	cp enigma $(bundle_name)/Contents/MacOS/enigma
	mkdir  $(bundle_name)/Contents/Frameworks
	for i in SDL SDL_mixer SDL_image SDL_ttf ; do \
	  cp -a /Library/Frameworks/$${i}.framework $(bundle_name)/Contents/Frameworks/; \
	done
	strip $(bundle_name)/Contents/MacOS/enigma

# Special target to create the preview images into the app bundle
.PHONY: bundle-preview
bundle-preview:
	$(bundle_name)/Contents/MacOS/enigma --makepreview
.PHONY: bundle-doc
bundle-doc:
	-rm -rf $(bundle_doc)
	mkdir -p $(bundle_doc)/images/flags25x15
	mkdir -p $(bundle_doc)/reference/images
	mkdir -p $(bundle_doc)/manual/images
	cp $(top_builddir)/README $(bundle_doc)/
	cp $(top_builddir)/COPYING $(bundle_doc)/
	cp $(top_builddir)/CHANGES $(bundle_doc)/
	cp $(top_builddir)/ACKNOWLEDGEMENTS $(bundle_doc)/
	cp $(top_builddir)/etc/README-SDL.txt $(bundle_doc)/
	cp $(top_builddir)/doc/index.html $(bundle_doc)/
	mkalias -r $(bundle_doc)/index.html $(bundle_root)/EnigmaDocs.html
	cp $(top_builddir)/doc/gpl.txt $(bundle_doc)/
	cp $(top_builddir)/doc/lgpl.txt $(bundle_doc)/
	cp $(top_builddir)/doc/README.mingw32 $(bundle_doc)/
	cp $(top_builddir)/doc/README.macosx $(bundle_doc)/
	cp $(top_builddir)/doc/images/enigma.css $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_enigma.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_cornerul.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/nav_cornerur.gif $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/favicon.png $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/menu_bg.jpg $(bundle_doc)/images/
	cp $(top_builddir)/doc/images/flags25x15/*.png $(bundle_doc)/images/flags25x15/
	cp $(top_builddir)/doc/reference/ant_lua.txt $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/sounds.txt $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/soundset.lua $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/lua2xml $(bundle_doc)/reference/
	cp $(top_builddir)/doc/reference/xml2lua $(bundle_doc)/reference/
	cp $(top_builddir)/doc/manual/images/*.png $(bundle_doc)/manual/images/
	cp $(top_builddir)/doc/manual/*.html $(bundle_doc)/manual/
	cp $(top_builddir)/doc/reference/images/*.png $(bundle_doc)/reference/images/
	cp $(top_builddir)/doc/reference/*.html $(bundle_doc)/reference/

# Special target to make a disk image of the bundled app
.PHONY: bundle-dmg
bundle-dmg:
	hdiutil create  -ov -srcfolder $(bundle_root) -volname Enigma -imagekey zlib-level=6 $(top_builddir)/etc/enigma.dmg

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
