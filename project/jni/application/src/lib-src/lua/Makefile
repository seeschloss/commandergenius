# Makefile.in generated by automake 1.15 from Makefile.am.
# lib-src/lua/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/enigma
pkgincludedir = $(includedir)/enigma
pkglibdir = $(libdir)/enigma
pkglibexecdir = $(libexecdir)/enigma
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
am__append_1 = -DLUA_USE_LINUX
am__append_2 = -x c++ $(AM_CXXFLAGS) $(CXXFLAGS)
subdir = lib-src/lua
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/m4/codeset.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/glibc21.m4 $(top_srcdir)/m4/iconv.m4 \
	$(top_srcdir)/m4/intdiv0.m4 $(top_srcdir)/m4/intmax.m4 \
	$(top_srcdir)/m4/inttypes-pri.m4 $(top_srcdir)/m4/inttypes.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/isc-posix.m4 \
	$(top_srcdir)/m4/lcmessage.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/longdouble.m4 $(top_srcdir)/m4/longlong.m4 \
	$(top_srcdir)/m4/nls.m4 $(top_srcdir)/m4/po.m4 \
	$(top_srcdir)/m4/printf-posix.m4 $(top_srcdir)/m4/progtest.m4 \
	$(top_srcdir)/m4/signed.m4 $(top_srcdir)/m4/size_max.m4 \
	$(top_srcdir)/m4/stdint_h.m4 $(top_srcdir)/m4/uintmax_t.m4 \
	$(top_srcdir)/m4/ulonglong.m4 $(top_srcdir)/m4/wchar_t.m4 \
	$(top_srcdir)/m4/wint_t.m4 $(top_srcdir)/m4/xsize.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
AR = ar
ARFLAGS = cru
AM_V_AR = $(am__v_AR_$(V))
am__v_AR_ = $(am__v_AR_$(AM_DEFAULT_VERBOSITY))
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
liblua_a_AR = $(AR) $(ARFLAGS)
liblua_a_LIBADD =
am_liblua_a_OBJECTS = liblua_a-lapi.$(OBJEXT) \
	liblua_a-lauxlib.$(OBJEXT) liblua_a-lbaselib.$(OBJEXT) \
	liblua_a-lcode.$(OBJEXT) liblua_a-ldblib.$(OBJEXT) \
	liblua_a-ldebug.$(OBJEXT) liblua_a-ldo.$(OBJEXT) \
	liblua_a-ldump.$(OBJEXT) liblua_a-lfunc.$(OBJEXT) \
	liblua_a-lgc.$(OBJEXT) liblua_a-linit.$(OBJEXT) \
	liblua_a-liolib.$(OBJEXT) liblua_a-llex.$(OBJEXT) \
	liblua_a-lmathlib.$(OBJEXT) liblua_a-lmem.$(OBJEXT) \
	liblua_a-loadlib.$(OBJEXT) liblua_a-lobject.$(OBJEXT) \
	liblua_a-lopcodes.$(OBJEXT) liblua_a-loslib.$(OBJEXT) \
	liblua_a-lparser.$(OBJEXT) liblua_a-lstate.$(OBJEXT) \
	liblua_a-lstring.$(OBJEXT) liblua_a-lstrlib.$(OBJEXT) \
	liblua_a-ltable.$(OBJEXT) liblua_a-ltablib.$(OBJEXT) \
	liblua_a-ltm.$(OBJEXT) liblua_a-lundump.$(OBJEXT) \
	liblua_a-lvm.$(OBJEXT) liblua_a-lzio.$(OBJEXT) \
	liblua_a-tolua_event.$(OBJEXT) liblua_a-tolua_is.$(OBJEXT) \
	liblua_a-tolua_map.$(OBJEXT) liblua_a-tolua_push.$(OBJEXT) \
	liblua_a-tolua_to.$(OBJEXT)
liblua_a_OBJECTS = $(am_liblua_a_OBJECTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/src
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(liblua_a_SOURCES)
DIST_SOURCES = $(liblua_a_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/depcomp \
	$(top_srcdir)/mkinstalldirs README
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/seeschloss/src/enigma/missing aclocal-1.15
ALLOCA = 
ALL_LINGUAS = de fr nl it es sv ru hu pt fi uk be el pl cs gd hr sk da
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AUTOCONF = ${SHELL} /home/seeschloss/src/enigma/missing autoconf
AUTOHEADER = ${SHELL} /home/seeschloss/src/enigma/missing autoheader
AUTOMAKE = ${SHELL} /home/seeschloss/src/enigma/missing automake-1.15
AWK = gawk
BUILD_INCLUDED_LIBINTL = no
CATOBJEXT = .gmo
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CONVERT = /usr/bin/convert
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2 -DENABLE_ASSERT -g -DCXXLUA
CYGPATH_W = echo
DATADIRNAME = share
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GENCAT = gencat
GLIBC21 = yes
GMSGFMT = /usr/bin/msgfmt
GREP = /usr/bin/grep
HAVE_ASPRINTF = 1
HAVE_CXX11 = 
HAVE_POSIX_PRINTF = 1
HAVE_SNPRINTF = 1
HAVE_WPRINTF = 0
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INSTOBJEXT = .mo
INTLBISON = bison
INTLLIBS = 
INTLOBJS = 
INTL_LIBTOOL_SUFFIX_PREFIX = 
LDFLAGS = 
LIBENET_CFLAGS = 
LIBENET_LIBS = 
LIBICONV = 
LIBINTL = 
LIBOBJS = 
LIBS = -lcurl -lxerces-c -lpng -ldl 
LTLIBICONV = 
LTLIBINTL = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/seeschloss/src/enigma/missing makeinfo
MKDIR_P = /usr/bin/mkdir -p
MKINSTALLDIRS = $(top_builddir)/./mkinstalldirs
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = enigma
PACKAGE_BUGREPORT = 
PACKAGE_NAME = enigma
PACKAGE_STRING = enigma 1.21
PACKAGE_TARNAME = enigma
PACKAGE_URL = 
PACKAGE_VERSION = 1.21
PATH_SEPARATOR = :
PDFLATEX = /usr/bin/pdflatex
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSUB = po
RANLIB = ranlib
SDL_CFLAGS = -I/usr/include/SDL -D_GNU_SOURCE=1 -D_REENTRANT
SDL_CONFIG = /usr/bin/sdl-config
SDL_LIBS = -L/usr/lib -lSDL -lpthread -lSDL_image -lSDL_mixer -lSDL_ttf
SDL_STATIC_PREFIX = 
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
TEXI2HTML = 
TOLUA = $(top_builddir)/tools/tolua
USE_INCLUDED_LIBINTL = no
USE_NLS = yes
VERSION = 1.21
WINDRES = windres
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/seeschloss/src/enigma/lib-src/lua
abs_srcdir = /home/seeschloss/src/enigma/lib-src/lua
abs_top_builddir = /home/seeschloss/src/enigma
abs_top_srcdir = /home/seeschloss/src/enigma
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/seeschloss/src/enigma/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  lib-src/enet lib-src/zipios++
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
noinst_LIBRARIES = liblua.a

# noinst_PROGRAMS = tolua
EXTRA_DIST = README lexerproxy.c
liblua_a_SOURCES = \
 lapi.c lauxlib.c lbaselib.c lcode.c ldblib.c ldebug.c \
 ldo.c ldump.c lfunc.c lgc.c linit.c liolib.c llex.c \
 lmathlib.c lmem.c loadlib.c lobject.c lopcodes.c loslib.c \
 lparser.c lstate.c lstring.c lstrlib.c ltable.c ltablib.c \
 ltm.c lundump.c lvm.c lzio.c lapi.h lauxlib.h lcode.h \
 ldebug.h ldo.h lfunc.h lgc.h llex.h llimits.h lmem.h lobject.h \
 lopcodes.h lparser.h  lstate.h lstring.h ltable.h ltm.h lua.h \
 luaconf.h lualib.h lundump.h lvm.h lzio.h tolua++.h \
 tolua_event.c tolua_event.h tolua_is.c tolua_map.c tolua_push.c \
 tolua_to.c \
 lexerproxy.h

liblua_a_CFLAGS = $(AM_CFLAGS) $(am__append_1) $(am__append_2)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign lib-src/lua/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign lib-src/lua/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)

liblua.a: $(liblua_a_OBJECTS) $(liblua_a_DEPENDENCIES) $(EXTRA_liblua_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f liblua.a
	$(AM_V_AR)$(liblua_a_AR) liblua.a $(liblua_a_OBJECTS) $(liblua_a_LIBADD)
	$(AM_V_at)$(RANLIB) liblua.a

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/liblua_a-lapi.Po
include ./$(DEPDIR)/liblua_a-lauxlib.Po
include ./$(DEPDIR)/liblua_a-lbaselib.Po
include ./$(DEPDIR)/liblua_a-lcode.Po
include ./$(DEPDIR)/liblua_a-ldblib.Po
include ./$(DEPDIR)/liblua_a-ldebug.Po
include ./$(DEPDIR)/liblua_a-ldo.Po
include ./$(DEPDIR)/liblua_a-ldump.Po
include ./$(DEPDIR)/liblua_a-lfunc.Po
include ./$(DEPDIR)/liblua_a-lgc.Po
include ./$(DEPDIR)/liblua_a-linit.Po
include ./$(DEPDIR)/liblua_a-liolib.Po
include ./$(DEPDIR)/liblua_a-llex.Po
include ./$(DEPDIR)/liblua_a-lmathlib.Po
include ./$(DEPDIR)/liblua_a-lmem.Po
include ./$(DEPDIR)/liblua_a-loadlib.Po
include ./$(DEPDIR)/liblua_a-lobject.Po
include ./$(DEPDIR)/liblua_a-lopcodes.Po
include ./$(DEPDIR)/liblua_a-loslib.Po
include ./$(DEPDIR)/liblua_a-lparser.Po
include ./$(DEPDIR)/liblua_a-lstate.Po
include ./$(DEPDIR)/liblua_a-lstring.Po
include ./$(DEPDIR)/liblua_a-lstrlib.Po
include ./$(DEPDIR)/liblua_a-ltable.Po
include ./$(DEPDIR)/liblua_a-ltablib.Po
include ./$(DEPDIR)/liblua_a-ltm.Po
include ./$(DEPDIR)/liblua_a-lundump.Po
include ./$(DEPDIR)/liblua_a-lvm.Po
include ./$(DEPDIR)/liblua_a-lzio.Po
include ./$(DEPDIR)/liblua_a-tolua_event.Po
include ./$(DEPDIR)/liblua_a-tolua_is.Po
include ./$(DEPDIR)/liblua_a-tolua_map.Po
include ./$(DEPDIR)/liblua_a-tolua_push.Po
include ./$(DEPDIR)/liblua_a-tolua_to.Po

.c.o:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

liblua_a-lapi.o: lapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lapi.o -MD -MP -MF $(DEPDIR)/liblua_a-lapi.Tpo -c -o liblua_a-lapi.o `test -f 'lapi.c' || echo '$(srcdir)/'`lapi.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lapi.Tpo $(DEPDIR)/liblua_a-lapi.Po
#	$(AM_V_CC)source='lapi.c' object='liblua_a-lapi.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lapi.o `test -f 'lapi.c' || echo '$(srcdir)/'`lapi.c

liblua_a-lapi.obj: lapi.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lapi.obj -MD -MP -MF $(DEPDIR)/liblua_a-lapi.Tpo -c -o liblua_a-lapi.obj `if test -f 'lapi.c'; then $(CYGPATH_W) 'lapi.c'; else $(CYGPATH_W) '$(srcdir)/lapi.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lapi.Tpo $(DEPDIR)/liblua_a-lapi.Po
#	$(AM_V_CC)source='lapi.c' object='liblua_a-lapi.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lapi.obj `if test -f 'lapi.c'; then $(CYGPATH_W) 'lapi.c'; else $(CYGPATH_W) '$(srcdir)/lapi.c'; fi`

liblua_a-lauxlib.o: lauxlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lauxlib.o -MD -MP -MF $(DEPDIR)/liblua_a-lauxlib.Tpo -c -o liblua_a-lauxlib.o `test -f 'lauxlib.c' || echo '$(srcdir)/'`lauxlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lauxlib.Tpo $(DEPDIR)/liblua_a-lauxlib.Po
#	$(AM_V_CC)source='lauxlib.c' object='liblua_a-lauxlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lauxlib.o `test -f 'lauxlib.c' || echo '$(srcdir)/'`lauxlib.c

liblua_a-lauxlib.obj: lauxlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lauxlib.obj -MD -MP -MF $(DEPDIR)/liblua_a-lauxlib.Tpo -c -o liblua_a-lauxlib.obj `if test -f 'lauxlib.c'; then $(CYGPATH_W) 'lauxlib.c'; else $(CYGPATH_W) '$(srcdir)/lauxlib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lauxlib.Tpo $(DEPDIR)/liblua_a-lauxlib.Po
#	$(AM_V_CC)source='lauxlib.c' object='liblua_a-lauxlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lauxlib.obj `if test -f 'lauxlib.c'; then $(CYGPATH_W) 'lauxlib.c'; else $(CYGPATH_W) '$(srcdir)/lauxlib.c'; fi`

liblua_a-lbaselib.o: lbaselib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lbaselib.o -MD -MP -MF $(DEPDIR)/liblua_a-lbaselib.Tpo -c -o liblua_a-lbaselib.o `test -f 'lbaselib.c' || echo '$(srcdir)/'`lbaselib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lbaselib.Tpo $(DEPDIR)/liblua_a-lbaselib.Po
#	$(AM_V_CC)source='lbaselib.c' object='liblua_a-lbaselib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lbaselib.o `test -f 'lbaselib.c' || echo '$(srcdir)/'`lbaselib.c

liblua_a-lbaselib.obj: lbaselib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lbaselib.obj -MD -MP -MF $(DEPDIR)/liblua_a-lbaselib.Tpo -c -o liblua_a-lbaselib.obj `if test -f 'lbaselib.c'; then $(CYGPATH_W) 'lbaselib.c'; else $(CYGPATH_W) '$(srcdir)/lbaselib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lbaselib.Tpo $(DEPDIR)/liblua_a-lbaselib.Po
#	$(AM_V_CC)source='lbaselib.c' object='liblua_a-lbaselib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lbaselib.obj `if test -f 'lbaselib.c'; then $(CYGPATH_W) 'lbaselib.c'; else $(CYGPATH_W) '$(srcdir)/lbaselib.c'; fi`

liblua_a-lcode.o: lcode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lcode.o -MD -MP -MF $(DEPDIR)/liblua_a-lcode.Tpo -c -o liblua_a-lcode.o `test -f 'lcode.c' || echo '$(srcdir)/'`lcode.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lcode.Tpo $(DEPDIR)/liblua_a-lcode.Po
#	$(AM_V_CC)source='lcode.c' object='liblua_a-lcode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lcode.o `test -f 'lcode.c' || echo '$(srcdir)/'`lcode.c

liblua_a-lcode.obj: lcode.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lcode.obj -MD -MP -MF $(DEPDIR)/liblua_a-lcode.Tpo -c -o liblua_a-lcode.obj `if test -f 'lcode.c'; then $(CYGPATH_W) 'lcode.c'; else $(CYGPATH_W) '$(srcdir)/lcode.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lcode.Tpo $(DEPDIR)/liblua_a-lcode.Po
#	$(AM_V_CC)source='lcode.c' object='liblua_a-lcode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lcode.obj `if test -f 'lcode.c'; then $(CYGPATH_W) 'lcode.c'; else $(CYGPATH_W) '$(srcdir)/lcode.c'; fi`

liblua_a-ldblib.o: ldblib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldblib.o -MD -MP -MF $(DEPDIR)/liblua_a-ldblib.Tpo -c -o liblua_a-ldblib.o `test -f 'ldblib.c' || echo '$(srcdir)/'`ldblib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldblib.Tpo $(DEPDIR)/liblua_a-ldblib.Po
#	$(AM_V_CC)source='ldblib.c' object='liblua_a-ldblib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldblib.o `test -f 'ldblib.c' || echo '$(srcdir)/'`ldblib.c

liblua_a-ldblib.obj: ldblib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldblib.obj -MD -MP -MF $(DEPDIR)/liblua_a-ldblib.Tpo -c -o liblua_a-ldblib.obj `if test -f 'ldblib.c'; then $(CYGPATH_W) 'ldblib.c'; else $(CYGPATH_W) '$(srcdir)/ldblib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldblib.Tpo $(DEPDIR)/liblua_a-ldblib.Po
#	$(AM_V_CC)source='ldblib.c' object='liblua_a-ldblib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldblib.obj `if test -f 'ldblib.c'; then $(CYGPATH_W) 'ldblib.c'; else $(CYGPATH_W) '$(srcdir)/ldblib.c'; fi`

liblua_a-ldebug.o: ldebug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldebug.o -MD -MP -MF $(DEPDIR)/liblua_a-ldebug.Tpo -c -o liblua_a-ldebug.o `test -f 'ldebug.c' || echo '$(srcdir)/'`ldebug.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldebug.Tpo $(DEPDIR)/liblua_a-ldebug.Po
#	$(AM_V_CC)source='ldebug.c' object='liblua_a-ldebug.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldebug.o `test -f 'ldebug.c' || echo '$(srcdir)/'`ldebug.c

liblua_a-ldebug.obj: ldebug.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldebug.obj -MD -MP -MF $(DEPDIR)/liblua_a-ldebug.Tpo -c -o liblua_a-ldebug.obj `if test -f 'ldebug.c'; then $(CYGPATH_W) 'ldebug.c'; else $(CYGPATH_W) '$(srcdir)/ldebug.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldebug.Tpo $(DEPDIR)/liblua_a-ldebug.Po
#	$(AM_V_CC)source='ldebug.c' object='liblua_a-ldebug.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldebug.obj `if test -f 'ldebug.c'; then $(CYGPATH_W) 'ldebug.c'; else $(CYGPATH_W) '$(srcdir)/ldebug.c'; fi`

liblua_a-ldo.o: ldo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldo.o -MD -MP -MF $(DEPDIR)/liblua_a-ldo.Tpo -c -o liblua_a-ldo.o `test -f 'ldo.c' || echo '$(srcdir)/'`ldo.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldo.Tpo $(DEPDIR)/liblua_a-ldo.Po
#	$(AM_V_CC)source='ldo.c' object='liblua_a-ldo.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldo.o `test -f 'ldo.c' || echo '$(srcdir)/'`ldo.c

liblua_a-ldo.obj: ldo.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldo.obj -MD -MP -MF $(DEPDIR)/liblua_a-ldo.Tpo -c -o liblua_a-ldo.obj `if test -f 'ldo.c'; then $(CYGPATH_W) 'ldo.c'; else $(CYGPATH_W) '$(srcdir)/ldo.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldo.Tpo $(DEPDIR)/liblua_a-ldo.Po
#	$(AM_V_CC)source='ldo.c' object='liblua_a-ldo.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldo.obj `if test -f 'ldo.c'; then $(CYGPATH_W) 'ldo.c'; else $(CYGPATH_W) '$(srcdir)/ldo.c'; fi`

liblua_a-ldump.o: ldump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldump.o -MD -MP -MF $(DEPDIR)/liblua_a-ldump.Tpo -c -o liblua_a-ldump.o `test -f 'ldump.c' || echo '$(srcdir)/'`ldump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldump.Tpo $(DEPDIR)/liblua_a-ldump.Po
#	$(AM_V_CC)source='ldump.c' object='liblua_a-ldump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldump.o `test -f 'ldump.c' || echo '$(srcdir)/'`ldump.c

liblua_a-ldump.obj: ldump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ldump.obj -MD -MP -MF $(DEPDIR)/liblua_a-ldump.Tpo -c -o liblua_a-ldump.obj `if test -f 'ldump.c'; then $(CYGPATH_W) 'ldump.c'; else $(CYGPATH_W) '$(srcdir)/ldump.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ldump.Tpo $(DEPDIR)/liblua_a-ldump.Po
#	$(AM_V_CC)source='ldump.c' object='liblua_a-ldump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ldump.obj `if test -f 'ldump.c'; then $(CYGPATH_W) 'ldump.c'; else $(CYGPATH_W) '$(srcdir)/ldump.c'; fi`

liblua_a-lfunc.o: lfunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lfunc.o -MD -MP -MF $(DEPDIR)/liblua_a-lfunc.Tpo -c -o liblua_a-lfunc.o `test -f 'lfunc.c' || echo '$(srcdir)/'`lfunc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lfunc.Tpo $(DEPDIR)/liblua_a-lfunc.Po
#	$(AM_V_CC)source='lfunc.c' object='liblua_a-lfunc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lfunc.o `test -f 'lfunc.c' || echo '$(srcdir)/'`lfunc.c

liblua_a-lfunc.obj: lfunc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lfunc.obj -MD -MP -MF $(DEPDIR)/liblua_a-lfunc.Tpo -c -o liblua_a-lfunc.obj `if test -f 'lfunc.c'; then $(CYGPATH_W) 'lfunc.c'; else $(CYGPATH_W) '$(srcdir)/lfunc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lfunc.Tpo $(DEPDIR)/liblua_a-lfunc.Po
#	$(AM_V_CC)source='lfunc.c' object='liblua_a-lfunc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lfunc.obj `if test -f 'lfunc.c'; then $(CYGPATH_W) 'lfunc.c'; else $(CYGPATH_W) '$(srcdir)/lfunc.c'; fi`

liblua_a-lgc.o: lgc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lgc.o -MD -MP -MF $(DEPDIR)/liblua_a-lgc.Tpo -c -o liblua_a-lgc.o `test -f 'lgc.c' || echo '$(srcdir)/'`lgc.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lgc.Tpo $(DEPDIR)/liblua_a-lgc.Po
#	$(AM_V_CC)source='lgc.c' object='liblua_a-lgc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lgc.o `test -f 'lgc.c' || echo '$(srcdir)/'`lgc.c

liblua_a-lgc.obj: lgc.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lgc.obj -MD -MP -MF $(DEPDIR)/liblua_a-lgc.Tpo -c -o liblua_a-lgc.obj `if test -f 'lgc.c'; then $(CYGPATH_W) 'lgc.c'; else $(CYGPATH_W) '$(srcdir)/lgc.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lgc.Tpo $(DEPDIR)/liblua_a-lgc.Po
#	$(AM_V_CC)source='lgc.c' object='liblua_a-lgc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lgc.obj `if test -f 'lgc.c'; then $(CYGPATH_W) 'lgc.c'; else $(CYGPATH_W) '$(srcdir)/lgc.c'; fi`

liblua_a-linit.o: linit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-linit.o -MD -MP -MF $(DEPDIR)/liblua_a-linit.Tpo -c -o liblua_a-linit.o `test -f 'linit.c' || echo '$(srcdir)/'`linit.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-linit.Tpo $(DEPDIR)/liblua_a-linit.Po
#	$(AM_V_CC)source='linit.c' object='liblua_a-linit.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-linit.o `test -f 'linit.c' || echo '$(srcdir)/'`linit.c

liblua_a-linit.obj: linit.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-linit.obj -MD -MP -MF $(DEPDIR)/liblua_a-linit.Tpo -c -o liblua_a-linit.obj `if test -f 'linit.c'; then $(CYGPATH_W) 'linit.c'; else $(CYGPATH_W) '$(srcdir)/linit.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-linit.Tpo $(DEPDIR)/liblua_a-linit.Po
#	$(AM_V_CC)source='linit.c' object='liblua_a-linit.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-linit.obj `if test -f 'linit.c'; then $(CYGPATH_W) 'linit.c'; else $(CYGPATH_W) '$(srcdir)/linit.c'; fi`

liblua_a-liolib.o: liolib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-liolib.o -MD -MP -MF $(DEPDIR)/liblua_a-liolib.Tpo -c -o liblua_a-liolib.o `test -f 'liolib.c' || echo '$(srcdir)/'`liolib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-liolib.Tpo $(DEPDIR)/liblua_a-liolib.Po
#	$(AM_V_CC)source='liolib.c' object='liblua_a-liolib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-liolib.o `test -f 'liolib.c' || echo '$(srcdir)/'`liolib.c

liblua_a-liolib.obj: liolib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-liolib.obj -MD -MP -MF $(DEPDIR)/liblua_a-liolib.Tpo -c -o liblua_a-liolib.obj `if test -f 'liolib.c'; then $(CYGPATH_W) 'liolib.c'; else $(CYGPATH_W) '$(srcdir)/liolib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-liolib.Tpo $(DEPDIR)/liblua_a-liolib.Po
#	$(AM_V_CC)source='liolib.c' object='liblua_a-liolib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-liolib.obj `if test -f 'liolib.c'; then $(CYGPATH_W) 'liolib.c'; else $(CYGPATH_W) '$(srcdir)/liolib.c'; fi`

liblua_a-llex.o: llex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-llex.o -MD -MP -MF $(DEPDIR)/liblua_a-llex.Tpo -c -o liblua_a-llex.o `test -f 'llex.c' || echo '$(srcdir)/'`llex.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-llex.Tpo $(DEPDIR)/liblua_a-llex.Po
#	$(AM_V_CC)source='llex.c' object='liblua_a-llex.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-llex.o `test -f 'llex.c' || echo '$(srcdir)/'`llex.c

liblua_a-llex.obj: llex.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-llex.obj -MD -MP -MF $(DEPDIR)/liblua_a-llex.Tpo -c -o liblua_a-llex.obj `if test -f 'llex.c'; then $(CYGPATH_W) 'llex.c'; else $(CYGPATH_W) '$(srcdir)/llex.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-llex.Tpo $(DEPDIR)/liblua_a-llex.Po
#	$(AM_V_CC)source='llex.c' object='liblua_a-llex.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-llex.obj `if test -f 'llex.c'; then $(CYGPATH_W) 'llex.c'; else $(CYGPATH_W) '$(srcdir)/llex.c'; fi`

liblua_a-lmathlib.o: lmathlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lmathlib.o -MD -MP -MF $(DEPDIR)/liblua_a-lmathlib.Tpo -c -o liblua_a-lmathlib.o `test -f 'lmathlib.c' || echo '$(srcdir)/'`lmathlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lmathlib.Tpo $(DEPDIR)/liblua_a-lmathlib.Po
#	$(AM_V_CC)source='lmathlib.c' object='liblua_a-lmathlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lmathlib.o `test -f 'lmathlib.c' || echo '$(srcdir)/'`lmathlib.c

liblua_a-lmathlib.obj: lmathlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lmathlib.obj -MD -MP -MF $(DEPDIR)/liblua_a-lmathlib.Tpo -c -o liblua_a-lmathlib.obj `if test -f 'lmathlib.c'; then $(CYGPATH_W) 'lmathlib.c'; else $(CYGPATH_W) '$(srcdir)/lmathlib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lmathlib.Tpo $(DEPDIR)/liblua_a-lmathlib.Po
#	$(AM_V_CC)source='lmathlib.c' object='liblua_a-lmathlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lmathlib.obj `if test -f 'lmathlib.c'; then $(CYGPATH_W) 'lmathlib.c'; else $(CYGPATH_W) '$(srcdir)/lmathlib.c'; fi`

liblua_a-lmem.o: lmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lmem.o -MD -MP -MF $(DEPDIR)/liblua_a-lmem.Tpo -c -o liblua_a-lmem.o `test -f 'lmem.c' || echo '$(srcdir)/'`lmem.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lmem.Tpo $(DEPDIR)/liblua_a-lmem.Po
#	$(AM_V_CC)source='lmem.c' object='liblua_a-lmem.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lmem.o `test -f 'lmem.c' || echo '$(srcdir)/'`lmem.c

liblua_a-lmem.obj: lmem.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lmem.obj -MD -MP -MF $(DEPDIR)/liblua_a-lmem.Tpo -c -o liblua_a-lmem.obj `if test -f 'lmem.c'; then $(CYGPATH_W) 'lmem.c'; else $(CYGPATH_W) '$(srcdir)/lmem.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lmem.Tpo $(DEPDIR)/liblua_a-lmem.Po
#	$(AM_V_CC)source='lmem.c' object='liblua_a-lmem.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lmem.obj `if test -f 'lmem.c'; then $(CYGPATH_W) 'lmem.c'; else $(CYGPATH_W) '$(srcdir)/lmem.c'; fi`

liblua_a-loadlib.o: loadlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-loadlib.o -MD -MP -MF $(DEPDIR)/liblua_a-loadlib.Tpo -c -o liblua_a-loadlib.o `test -f 'loadlib.c' || echo '$(srcdir)/'`loadlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-loadlib.Tpo $(DEPDIR)/liblua_a-loadlib.Po
#	$(AM_V_CC)source='loadlib.c' object='liblua_a-loadlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-loadlib.o `test -f 'loadlib.c' || echo '$(srcdir)/'`loadlib.c

liblua_a-loadlib.obj: loadlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-loadlib.obj -MD -MP -MF $(DEPDIR)/liblua_a-loadlib.Tpo -c -o liblua_a-loadlib.obj `if test -f 'loadlib.c'; then $(CYGPATH_W) 'loadlib.c'; else $(CYGPATH_W) '$(srcdir)/loadlib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-loadlib.Tpo $(DEPDIR)/liblua_a-loadlib.Po
#	$(AM_V_CC)source='loadlib.c' object='liblua_a-loadlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-loadlib.obj `if test -f 'loadlib.c'; then $(CYGPATH_W) 'loadlib.c'; else $(CYGPATH_W) '$(srcdir)/loadlib.c'; fi`

liblua_a-lobject.o: lobject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lobject.o -MD -MP -MF $(DEPDIR)/liblua_a-lobject.Tpo -c -o liblua_a-lobject.o `test -f 'lobject.c' || echo '$(srcdir)/'`lobject.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lobject.Tpo $(DEPDIR)/liblua_a-lobject.Po
#	$(AM_V_CC)source='lobject.c' object='liblua_a-lobject.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lobject.o `test -f 'lobject.c' || echo '$(srcdir)/'`lobject.c

liblua_a-lobject.obj: lobject.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lobject.obj -MD -MP -MF $(DEPDIR)/liblua_a-lobject.Tpo -c -o liblua_a-lobject.obj `if test -f 'lobject.c'; then $(CYGPATH_W) 'lobject.c'; else $(CYGPATH_W) '$(srcdir)/lobject.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lobject.Tpo $(DEPDIR)/liblua_a-lobject.Po
#	$(AM_V_CC)source='lobject.c' object='liblua_a-lobject.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lobject.obj `if test -f 'lobject.c'; then $(CYGPATH_W) 'lobject.c'; else $(CYGPATH_W) '$(srcdir)/lobject.c'; fi`

liblua_a-lopcodes.o: lopcodes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lopcodes.o -MD -MP -MF $(DEPDIR)/liblua_a-lopcodes.Tpo -c -o liblua_a-lopcodes.o `test -f 'lopcodes.c' || echo '$(srcdir)/'`lopcodes.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lopcodes.Tpo $(DEPDIR)/liblua_a-lopcodes.Po
#	$(AM_V_CC)source='lopcodes.c' object='liblua_a-lopcodes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lopcodes.o `test -f 'lopcodes.c' || echo '$(srcdir)/'`lopcodes.c

liblua_a-lopcodes.obj: lopcodes.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lopcodes.obj -MD -MP -MF $(DEPDIR)/liblua_a-lopcodes.Tpo -c -o liblua_a-lopcodes.obj `if test -f 'lopcodes.c'; then $(CYGPATH_W) 'lopcodes.c'; else $(CYGPATH_W) '$(srcdir)/lopcodes.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lopcodes.Tpo $(DEPDIR)/liblua_a-lopcodes.Po
#	$(AM_V_CC)source='lopcodes.c' object='liblua_a-lopcodes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lopcodes.obj `if test -f 'lopcodes.c'; then $(CYGPATH_W) 'lopcodes.c'; else $(CYGPATH_W) '$(srcdir)/lopcodes.c'; fi`

liblua_a-loslib.o: loslib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-loslib.o -MD -MP -MF $(DEPDIR)/liblua_a-loslib.Tpo -c -o liblua_a-loslib.o `test -f 'loslib.c' || echo '$(srcdir)/'`loslib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-loslib.Tpo $(DEPDIR)/liblua_a-loslib.Po
#	$(AM_V_CC)source='loslib.c' object='liblua_a-loslib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-loslib.o `test -f 'loslib.c' || echo '$(srcdir)/'`loslib.c

liblua_a-loslib.obj: loslib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-loslib.obj -MD -MP -MF $(DEPDIR)/liblua_a-loslib.Tpo -c -o liblua_a-loslib.obj `if test -f 'loslib.c'; then $(CYGPATH_W) 'loslib.c'; else $(CYGPATH_W) '$(srcdir)/loslib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-loslib.Tpo $(DEPDIR)/liblua_a-loslib.Po
#	$(AM_V_CC)source='loslib.c' object='liblua_a-loslib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-loslib.obj `if test -f 'loslib.c'; then $(CYGPATH_W) 'loslib.c'; else $(CYGPATH_W) '$(srcdir)/loslib.c'; fi`

liblua_a-lparser.o: lparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lparser.o -MD -MP -MF $(DEPDIR)/liblua_a-lparser.Tpo -c -o liblua_a-lparser.o `test -f 'lparser.c' || echo '$(srcdir)/'`lparser.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lparser.Tpo $(DEPDIR)/liblua_a-lparser.Po
#	$(AM_V_CC)source='lparser.c' object='liblua_a-lparser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lparser.o `test -f 'lparser.c' || echo '$(srcdir)/'`lparser.c

liblua_a-lparser.obj: lparser.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lparser.obj -MD -MP -MF $(DEPDIR)/liblua_a-lparser.Tpo -c -o liblua_a-lparser.obj `if test -f 'lparser.c'; then $(CYGPATH_W) 'lparser.c'; else $(CYGPATH_W) '$(srcdir)/lparser.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lparser.Tpo $(DEPDIR)/liblua_a-lparser.Po
#	$(AM_V_CC)source='lparser.c' object='liblua_a-lparser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lparser.obj `if test -f 'lparser.c'; then $(CYGPATH_W) 'lparser.c'; else $(CYGPATH_W) '$(srcdir)/lparser.c'; fi`

liblua_a-lstate.o: lstate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstate.o -MD -MP -MF $(DEPDIR)/liblua_a-lstate.Tpo -c -o liblua_a-lstate.o `test -f 'lstate.c' || echo '$(srcdir)/'`lstate.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstate.Tpo $(DEPDIR)/liblua_a-lstate.Po
#	$(AM_V_CC)source='lstate.c' object='liblua_a-lstate.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstate.o `test -f 'lstate.c' || echo '$(srcdir)/'`lstate.c

liblua_a-lstate.obj: lstate.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstate.obj -MD -MP -MF $(DEPDIR)/liblua_a-lstate.Tpo -c -o liblua_a-lstate.obj `if test -f 'lstate.c'; then $(CYGPATH_W) 'lstate.c'; else $(CYGPATH_W) '$(srcdir)/lstate.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstate.Tpo $(DEPDIR)/liblua_a-lstate.Po
#	$(AM_V_CC)source='lstate.c' object='liblua_a-lstate.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstate.obj `if test -f 'lstate.c'; then $(CYGPATH_W) 'lstate.c'; else $(CYGPATH_W) '$(srcdir)/lstate.c'; fi`

liblua_a-lstring.o: lstring.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstring.o -MD -MP -MF $(DEPDIR)/liblua_a-lstring.Tpo -c -o liblua_a-lstring.o `test -f 'lstring.c' || echo '$(srcdir)/'`lstring.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstring.Tpo $(DEPDIR)/liblua_a-lstring.Po
#	$(AM_V_CC)source='lstring.c' object='liblua_a-lstring.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstring.o `test -f 'lstring.c' || echo '$(srcdir)/'`lstring.c

liblua_a-lstring.obj: lstring.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstring.obj -MD -MP -MF $(DEPDIR)/liblua_a-lstring.Tpo -c -o liblua_a-lstring.obj `if test -f 'lstring.c'; then $(CYGPATH_W) 'lstring.c'; else $(CYGPATH_W) '$(srcdir)/lstring.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstring.Tpo $(DEPDIR)/liblua_a-lstring.Po
#	$(AM_V_CC)source='lstring.c' object='liblua_a-lstring.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstring.obj `if test -f 'lstring.c'; then $(CYGPATH_W) 'lstring.c'; else $(CYGPATH_W) '$(srcdir)/lstring.c'; fi`

liblua_a-lstrlib.o: lstrlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstrlib.o -MD -MP -MF $(DEPDIR)/liblua_a-lstrlib.Tpo -c -o liblua_a-lstrlib.o `test -f 'lstrlib.c' || echo '$(srcdir)/'`lstrlib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstrlib.Tpo $(DEPDIR)/liblua_a-lstrlib.Po
#	$(AM_V_CC)source='lstrlib.c' object='liblua_a-lstrlib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstrlib.o `test -f 'lstrlib.c' || echo '$(srcdir)/'`lstrlib.c

liblua_a-lstrlib.obj: lstrlib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lstrlib.obj -MD -MP -MF $(DEPDIR)/liblua_a-lstrlib.Tpo -c -o liblua_a-lstrlib.obj `if test -f 'lstrlib.c'; then $(CYGPATH_W) 'lstrlib.c'; else $(CYGPATH_W) '$(srcdir)/lstrlib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lstrlib.Tpo $(DEPDIR)/liblua_a-lstrlib.Po
#	$(AM_V_CC)source='lstrlib.c' object='liblua_a-lstrlib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lstrlib.obj `if test -f 'lstrlib.c'; then $(CYGPATH_W) 'lstrlib.c'; else $(CYGPATH_W) '$(srcdir)/lstrlib.c'; fi`

liblua_a-ltable.o: ltable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltable.o -MD -MP -MF $(DEPDIR)/liblua_a-ltable.Tpo -c -o liblua_a-ltable.o `test -f 'ltable.c' || echo '$(srcdir)/'`ltable.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltable.Tpo $(DEPDIR)/liblua_a-ltable.Po
#	$(AM_V_CC)source='ltable.c' object='liblua_a-ltable.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltable.o `test -f 'ltable.c' || echo '$(srcdir)/'`ltable.c

liblua_a-ltable.obj: ltable.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltable.obj -MD -MP -MF $(DEPDIR)/liblua_a-ltable.Tpo -c -o liblua_a-ltable.obj `if test -f 'ltable.c'; then $(CYGPATH_W) 'ltable.c'; else $(CYGPATH_W) '$(srcdir)/ltable.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltable.Tpo $(DEPDIR)/liblua_a-ltable.Po
#	$(AM_V_CC)source='ltable.c' object='liblua_a-ltable.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltable.obj `if test -f 'ltable.c'; then $(CYGPATH_W) 'ltable.c'; else $(CYGPATH_W) '$(srcdir)/ltable.c'; fi`

liblua_a-ltablib.o: ltablib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltablib.o -MD -MP -MF $(DEPDIR)/liblua_a-ltablib.Tpo -c -o liblua_a-ltablib.o `test -f 'ltablib.c' || echo '$(srcdir)/'`ltablib.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltablib.Tpo $(DEPDIR)/liblua_a-ltablib.Po
#	$(AM_V_CC)source='ltablib.c' object='liblua_a-ltablib.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltablib.o `test -f 'ltablib.c' || echo '$(srcdir)/'`ltablib.c

liblua_a-ltablib.obj: ltablib.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltablib.obj -MD -MP -MF $(DEPDIR)/liblua_a-ltablib.Tpo -c -o liblua_a-ltablib.obj `if test -f 'ltablib.c'; then $(CYGPATH_W) 'ltablib.c'; else $(CYGPATH_W) '$(srcdir)/ltablib.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltablib.Tpo $(DEPDIR)/liblua_a-ltablib.Po
#	$(AM_V_CC)source='ltablib.c' object='liblua_a-ltablib.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltablib.obj `if test -f 'ltablib.c'; then $(CYGPATH_W) 'ltablib.c'; else $(CYGPATH_W) '$(srcdir)/ltablib.c'; fi`

liblua_a-ltm.o: ltm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltm.o -MD -MP -MF $(DEPDIR)/liblua_a-ltm.Tpo -c -o liblua_a-ltm.o `test -f 'ltm.c' || echo '$(srcdir)/'`ltm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltm.Tpo $(DEPDIR)/liblua_a-ltm.Po
#	$(AM_V_CC)source='ltm.c' object='liblua_a-ltm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltm.o `test -f 'ltm.c' || echo '$(srcdir)/'`ltm.c

liblua_a-ltm.obj: ltm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-ltm.obj -MD -MP -MF $(DEPDIR)/liblua_a-ltm.Tpo -c -o liblua_a-ltm.obj `if test -f 'ltm.c'; then $(CYGPATH_W) 'ltm.c'; else $(CYGPATH_W) '$(srcdir)/ltm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-ltm.Tpo $(DEPDIR)/liblua_a-ltm.Po
#	$(AM_V_CC)source='ltm.c' object='liblua_a-ltm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-ltm.obj `if test -f 'ltm.c'; then $(CYGPATH_W) 'ltm.c'; else $(CYGPATH_W) '$(srcdir)/ltm.c'; fi`

liblua_a-lundump.o: lundump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lundump.o -MD -MP -MF $(DEPDIR)/liblua_a-lundump.Tpo -c -o liblua_a-lundump.o `test -f 'lundump.c' || echo '$(srcdir)/'`lundump.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lundump.Tpo $(DEPDIR)/liblua_a-lundump.Po
#	$(AM_V_CC)source='lundump.c' object='liblua_a-lundump.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lundump.o `test -f 'lundump.c' || echo '$(srcdir)/'`lundump.c

liblua_a-lundump.obj: lundump.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lundump.obj -MD -MP -MF $(DEPDIR)/liblua_a-lundump.Tpo -c -o liblua_a-lundump.obj `if test -f 'lundump.c'; then $(CYGPATH_W) 'lundump.c'; else $(CYGPATH_W) '$(srcdir)/lundump.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lundump.Tpo $(DEPDIR)/liblua_a-lundump.Po
#	$(AM_V_CC)source='lundump.c' object='liblua_a-lundump.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lundump.obj `if test -f 'lundump.c'; then $(CYGPATH_W) 'lundump.c'; else $(CYGPATH_W) '$(srcdir)/lundump.c'; fi`

liblua_a-lvm.o: lvm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lvm.o -MD -MP -MF $(DEPDIR)/liblua_a-lvm.Tpo -c -o liblua_a-lvm.o `test -f 'lvm.c' || echo '$(srcdir)/'`lvm.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lvm.Tpo $(DEPDIR)/liblua_a-lvm.Po
#	$(AM_V_CC)source='lvm.c' object='liblua_a-lvm.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lvm.o `test -f 'lvm.c' || echo '$(srcdir)/'`lvm.c

liblua_a-lvm.obj: lvm.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lvm.obj -MD -MP -MF $(DEPDIR)/liblua_a-lvm.Tpo -c -o liblua_a-lvm.obj `if test -f 'lvm.c'; then $(CYGPATH_W) 'lvm.c'; else $(CYGPATH_W) '$(srcdir)/lvm.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lvm.Tpo $(DEPDIR)/liblua_a-lvm.Po
#	$(AM_V_CC)source='lvm.c' object='liblua_a-lvm.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lvm.obj `if test -f 'lvm.c'; then $(CYGPATH_W) 'lvm.c'; else $(CYGPATH_W) '$(srcdir)/lvm.c'; fi`

liblua_a-lzio.o: lzio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lzio.o -MD -MP -MF $(DEPDIR)/liblua_a-lzio.Tpo -c -o liblua_a-lzio.o `test -f 'lzio.c' || echo '$(srcdir)/'`lzio.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lzio.Tpo $(DEPDIR)/liblua_a-lzio.Po
#	$(AM_V_CC)source='lzio.c' object='liblua_a-lzio.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lzio.o `test -f 'lzio.c' || echo '$(srcdir)/'`lzio.c

liblua_a-lzio.obj: lzio.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-lzio.obj -MD -MP -MF $(DEPDIR)/liblua_a-lzio.Tpo -c -o liblua_a-lzio.obj `if test -f 'lzio.c'; then $(CYGPATH_W) 'lzio.c'; else $(CYGPATH_W) '$(srcdir)/lzio.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-lzio.Tpo $(DEPDIR)/liblua_a-lzio.Po
#	$(AM_V_CC)source='lzio.c' object='liblua_a-lzio.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-lzio.obj `if test -f 'lzio.c'; then $(CYGPATH_W) 'lzio.c'; else $(CYGPATH_W) '$(srcdir)/lzio.c'; fi`

liblua_a-tolua_event.o: tolua_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_event.o -MD -MP -MF $(DEPDIR)/liblua_a-tolua_event.Tpo -c -o liblua_a-tolua_event.o `test -f 'tolua_event.c' || echo '$(srcdir)/'`tolua_event.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_event.Tpo $(DEPDIR)/liblua_a-tolua_event.Po
#	$(AM_V_CC)source='tolua_event.c' object='liblua_a-tolua_event.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_event.o `test -f 'tolua_event.c' || echo '$(srcdir)/'`tolua_event.c

liblua_a-tolua_event.obj: tolua_event.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_event.obj -MD -MP -MF $(DEPDIR)/liblua_a-tolua_event.Tpo -c -o liblua_a-tolua_event.obj `if test -f 'tolua_event.c'; then $(CYGPATH_W) 'tolua_event.c'; else $(CYGPATH_W) '$(srcdir)/tolua_event.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_event.Tpo $(DEPDIR)/liblua_a-tolua_event.Po
#	$(AM_V_CC)source='tolua_event.c' object='liblua_a-tolua_event.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_event.obj `if test -f 'tolua_event.c'; then $(CYGPATH_W) 'tolua_event.c'; else $(CYGPATH_W) '$(srcdir)/tolua_event.c'; fi`

liblua_a-tolua_is.o: tolua_is.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_is.o -MD -MP -MF $(DEPDIR)/liblua_a-tolua_is.Tpo -c -o liblua_a-tolua_is.o `test -f 'tolua_is.c' || echo '$(srcdir)/'`tolua_is.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_is.Tpo $(DEPDIR)/liblua_a-tolua_is.Po
#	$(AM_V_CC)source='tolua_is.c' object='liblua_a-tolua_is.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_is.o `test -f 'tolua_is.c' || echo '$(srcdir)/'`tolua_is.c

liblua_a-tolua_is.obj: tolua_is.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_is.obj -MD -MP -MF $(DEPDIR)/liblua_a-tolua_is.Tpo -c -o liblua_a-tolua_is.obj `if test -f 'tolua_is.c'; then $(CYGPATH_W) 'tolua_is.c'; else $(CYGPATH_W) '$(srcdir)/tolua_is.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_is.Tpo $(DEPDIR)/liblua_a-tolua_is.Po
#	$(AM_V_CC)source='tolua_is.c' object='liblua_a-tolua_is.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_is.obj `if test -f 'tolua_is.c'; then $(CYGPATH_W) 'tolua_is.c'; else $(CYGPATH_W) '$(srcdir)/tolua_is.c'; fi`

liblua_a-tolua_map.o: tolua_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_map.o -MD -MP -MF $(DEPDIR)/liblua_a-tolua_map.Tpo -c -o liblua_a-tolua_map.o `test -f 'tolua_map.c' || echo '$(srcdir)/'`tolua_map.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_map.Tpo $(DEPDIR)/liblua_a-tolua_map.Po
#	$(AM_V_CC)source='tolua_map.c' object='liblua_a-tolua_map.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_map.o `test -f 'tolua_map.c' || echo '$(srcdir)/'`tolua_map.c

liblua_a-tolua_map.obj: tolua_map.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_map.obj -MD -MP -MF $(DEPDIR)/liblua_a-tolua_map.Tpo -c -o liblua_a-tolua_map.obj `if test -f 'tolua_map.c'; then $(CYGPATH_W) 'tolua_map.c'; else $(CYGPATH_W) '$(srcdir)/tolua_map.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_map.Tpo $(DEPDIR)/liblua_a-tolua_map.Po
#	$(AM_V_CC)source='tolua_map.c' object='liblua_a-tolua_map.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_map.obj `if test -f 'tolua_map.c'; then $(CYGPATH_W) 'tolua_map.c'; else $(CYGPATH_W) '$(srcdir)/tolua_map.c'; fi`

liblua_a-tolua_push.o: tolua_push.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_push.o -MD -MP -MF $(DEPDIR)/liblua_a-tolua_push.Tpo -c -o liblua_a-tolua_push.o `test -f 'tolua_push.c' || echo '$(srcdir)/'`tolua_push.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_push.Tpo $(DEPDIR)/liblua_a-tolua_push.Po
#	$(AM_V_CC)source='tolua_push.c' object='liblua_a-tolua_push.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_push.o `test -f 'tolua_push.c' || echo '$(srcdir)/'`tolua_push.c

liblua_a-tolua_push.obj: tolua_push.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_push.obj -MD -MP -MF $(DEPDIR)/liblua_a-tolua_push.Tpo -c -o liblua_a-tolua_push.obj `if test -f 'tolua_push.c'; then $(CYGPATH_W) 'tolua_push.c'; else $(CYGPATH_W) '$(srcdir)/tolua_push.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_push.Tpo $(DEPDIR)/liblua_a-tolua_push.Po
#	$(AM_V_CC)source='tolua_push.c' object='liblua_a-tolua_push.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_push.obj `if test -f 'tolua_push.c'; then $(CYGPATH_W) 'tolua_push.c'; else $(CYGPATH_W) '$(srcdir)/tolua_push.c'; fi`

liblua_a-tolua_to.o: tolua_to.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_to.o -MD -MP -MF $(DEPDIR)/liblua_a-tolua_to.Tpo -c -o liblua_a-tolua_to.o `test -f 'tolua_to.c' || echo '$(srcdir)/'`tolua_to.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_to.Tpo $(DEPDIR)/liblua_a-tolua_to.Po
#	$(AM_V_CC)source='tolua_to.c' object='liblua_a-tolua_to.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_to.o `test -f 'tolua_to.c' || echo '$(srcdir)/'`tolua_to.c

liblua_a-tolua_to.obj: tolua_to.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -MT liblua_a-tolua_to.obj -MD -MP -MF $(DEPDIR)/liblua_a-tolua_to.Tpo -c -o liblua_a-tolua_to.obj `if test -f 'tolua_to.c'; then $(CYGPATH_W) 'tolua_to.c'; else $(CYGPATH_W) '$(srcdir)/tolua_to.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/liblua_a-tolua_to.Tpo $(DEPDIR)/liblua_a-tolua_to.Po
#	$(AM_V_CC)source='tolua_to.c' object='liblua_a-tolua_to.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(AM_V_CC_no)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(liblua_a_CFLAGS) $(CFLAGS) -c -o liblua_a-tolua_to.obj `if test -f 'tolua_to.c'; then $(CYGPATH_W) 'tolua_to.c'; else $(CYGPATH_W) '$(srcdir)/tolua_to.c'; fi`

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-noinstLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-noinstLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
